{"ast":null,"code":"/* eslint-disable */\nimport { makeApiRequest } from './apiConnectionPool.js';\nimport { subscribeOnStream, unsubscribeFromStream, websocketUnsubscriptionChain } from './webSocketstream.js';\nimport { logMessage } from '../utils/helpers.js';\nimport { mynturl, myntDCUrl, clientid, session } from \"../apiUrl.js\";\nexport var mastersJson;\n\n// await makeApiRequest('https://be.mynt.in/Masters', '');\n// export var json = await makeApiRequest('https://be.mynt.in/Masters','');\n\n// var userid = localStorage.getItem('userid');\n// var usession = localStorage.getItem('usession');\n// var actid = localStorage.getItem('actid');\n\nvar userid = clientid;\nvar usession = session;\nconst lastBarsCache = new Map();\nwindow._symbolInfoMap = {};\nconst configurationData = {\n  supported_resolutions: [\"1\", \"3\", \"5\", \"10\", \"15\", \"30\", \"45\", \"60\", \"120\", \"180\", \"240\", \"1D\", \"1W\", \"1M\"],\n  exchanges: [{\n    \"value\": \"ALL\",\n    \"name\": \"All exchange\"\n  }, {\n    \"value\": \"NSE\",\n    \"name\": \"NSE\"\n  }, {\n    \"value\": \"BSE\",\n    \"name\": \"BSE\"\n  }, {\n    \"value\": \"MCX\",\n    \"name\": \"MCX\"\n  }],\n  symbols_types: [{\n    name: \"All\",\n    value: \"\"\n  }, {\n    name: \"Equity\",\n    value: \"STOCK\"\n  }, {\n    name: \"F&O\",\n    value: \"F&O\"\n  }, {\n    name: \"Currency\",\n    value: \"CURR\"\n  }, {\n    name: \"Commodity\",\n    value: \"COMM\"\n  }],\n  \"supports_search\": true,\n  \"supports_group_request\": false,\n  \"supports_marks\": false,\n  \"supports_timescale_marks\": true,\n  \"supports_time\": true\n};\nexport default {\n  async onReady(callback) {\n    // console.log(\"[onReady] Initiated \")\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    await fetch(\"https://be.mynt.in/Masters\", requestOptions).then(response => response.json()).then(result => {\n      mastersJson = result;\n      // console.log(\"API RES:\",result)\n    }).catch(error => console.log('error', error));\n    setTimeout(() => callback(configurationData));\n  },\n  async searchSymbols(userInput, exchange, symbolType, onResultReadyCallback) {\n    const symbols = await getAllSymbols(userInput, exchange, symbolType);\n    onResultReadyCallback(symbols);\n  },\n  async getQuotes(symbols, onDataCallback, onErrorCallback) {\n    var symbolInfos = {};\n    symbols.forEach(symbol => {\n      function resolvedata(symbolInfo) {\n        symbolInfos[symbol] = symbolInfo;\n        if (Object.keys(symbolInfos).length == symbols.length) {\n          subscribeOnStream(Object.values(symbolInfos), undefined, onDataCallback, Date.now().toString(), undefined, undefined, 'single-quotes');\n        }\n      }\n      this.resolveSymbol(symbol, resolvedata, onErrorCallback);\n    });\n  },\n  async subscribeQuotes(symbols, fastSymbols, onRealtimeCallback, listenerGuid) {\n    if (fastSymbols == null) {\n      fastSymbols = symbols;\n    }\n    var symbolInfos = {};\n    symbols.forEach(symbol => {\n      function resolvedata(symbolInfo) {\n        symbolInfos[symbol] = symbolInfo;\n        // console.log(symbolInfo,'info')\n        if (Object.keys(symbolInfos).length == symbols.length) {\n          subscribeOnStream(Object.values(symbolInfos), undefined, onRealtimeCallback, listenerGuid, undefined, undefined, 'quotes');\n        }\n      }\n      this.resolveSymbol(symbol, resolvedata, res => {\n        logMessage(`resolveSymbol error : ${res} `);\n      });\n    });\n  },\n  async unsubscribeQuotes(listenerGUID) {\n    // console.log(\"[chain] unsubscribeQuotes 1:\",listenerGUID)\n    unsubscribeFromStream(listenerGUID);\n  },\n  // async getltp(symbols, fastSymbols, onRealtimeCallback, listenerGuid) {\n  //     if (fastSymbols == null) {\n  //         fastSymbols = symbols\n  //     }\n  //     var symbolInfos = {}\n  //     symbols.forEach(symbol => {\n  //         function resolvedata(symbolInfo) {\n  //             symbolInfos[symbol] = symbolInfo\n  //             console.log(symbolInfo,'info')\n  //             if (Object.keys(symbolInfos).length == symbols.length) {\n  //                 subscribeOnStream(Object.values(symbolInfos),\n  //                     undefined,\n  //                     onRealtimeCallback,\n  //                     listenerGuid,\n  //                     undefined,\n  //                     undefined, 'quotes')\n  //             }\n  //         }\n  //         this.resolveSymbol(symbol, resolvedata,(res)=>{\n  //             logMessage(`resolveSymbol error : ${res} `)\n  //         })\n  //     });\n  // },\n  // async ungetltp(listenerGUID) {\n  //     // console.log(\"[chain] unsubscribeQuotes 1:\",listenerGUID)\n  //     unsubscribeFromStream(listenerGUID)\n  // },\n  async getltpsub(tokens, onRealtimeCallback, listenerGuid) {\n    // console.log(\"=========== : \",tokens)\n\n    var promises =\n    // tokens.map((token)=> {\n    // console.log(\"=========== : \",token.tsym.toUpperCase())\n    tokens.map(token => {\n      // console.log(\"=========== : \",token.tsym.toUpperCase())\n      // console.log(\"=========== : \",token)\n      return Promise.resolve({\n        name: `${token.exch}:${token.tsym.toUpperCase()}`,\n        exchange: token.exch,\n        token: token.token\n      });\n    });\n    Promise.all(promises).then(SymbolInfo => {\n      subscribeOnStream(SymbolInfo, undefined, onRealtimeCallback, listenerGuid, undefined, undefined, 'ltp');\n    });\n  },\n  async getltpsub(symbolList) {\n    websocketUnsubscriptionChain(symbolList);\n  },\n  subscribeQuotesChain(tokens, onRealtimeCallback, listenerGuid) {\n    // console.log(tokens,onRealtimeCallback,listenerGuid)\n    var promises = tokens.map(token => {\n      console.log(\"=========== : \", token.tsym.toUpperCase());\n      // console.log(\"=========== : \",token)\n      return Promise.resolve({\n        name: `${token.exch}:${token.tsym.toUpperCase()}`,\n        exchange: token.exch,\n        token: token.token\n      });\n    });\n    // console.log(promises)\n    Promise.all(promises).then(SymbolInfo => {\n      subscribeOnStream(SymbolInfo, undefined, onRealtimeCallback, listenerGuid, undefined, undefined, 'quotes');\n    });\n  },\n  unsubscribeQuotesChain(symbolList) {\n    // console.log(\"[chain] unsubscribeQuotes 2:\",listenerGuid)\n    websocketUnsubscriptionChain(symbolList);\n  },\n  async resolveSymbol(symbolName, onSymbolResolvedCallback, ErrorCallback) {\n    if (_symbolInfoMap[symbolName] != undefined) {\n      setTimeout(() => onSymbolResolvedCallback(_symbolInfoMap[symbolName]));\n      return Promise.resolve(_symbolInfoMap[symbolName]);\n    }\n    var symbolItem;\n    let symbols = mastersJson[`${symbolName.toUpperCase()}`];\n    symbolItem = symbols;\n    if (symbolItem == undefined) {\n      ErrorCallback('cannot resolve symbol');\n      return Promise.reject('cannot resolve symbol');\n    }\n    var ex = symbolName.split(\":\")[0];\n    var typ;\n    if (ex == \"NSE\" || ex == \"BSE\") {\n      typ = \"stock\";\n    } else if (ex == \"NFO\") {\n      typ = \"index\";\n    }\n    const symbolInfo = {\n      token: symbolItem[0],\n      ticker: symbolName,\n      name: symbolName,\n      base_name: symbolItem[4] == \"IDX\" ? symbolItem[1] : symbolName.split(\":\")[1],\n      pro_name: symbolName,\n      full_name: symbolName,\n      description: symbolName,\n      type: symbolItem[2],\n      session: symbolName.split(\":\")[0] == \"MCX\" ? \"0900-2330\" : symbolName.split(\":\")[0] == \"CDS\" ? \"0900-1700\" : \"0915-1530\",\n      timezone: \"Asia/Kolkata\",\n      exchange: symbolName.split(\":\")[0],\n      minmov: symbolName.split(\":\")[0] == \"CDS\" ? symbolItem[2] * 10000 : symbolItem[2] * 100,\n      pricescale: symbolName.split(\":\")[0] == \"CDS\" ? 10000 : 100,\n      has_intraday: true,\n      has_no_volume: symbolItem[4] == \"IDX\" ? true : false,\n      has_weekly_and_monthly: true,\n      lot_size: symbolItem[3],\n      isTradable: symbolItem[4] != \"IDX\" ? true : false,\n      qty: {\n        step: symbolName.split(\":\")[0] == \"MCX\" ? 1 : symbolItem[3],\n        default: symbolName.split(\":\")[0] == \"MCX\" ? 1 : symbolItem[3]\n      },\n      supported_resolutions: [\"1\", \"3\", \"5\", \"10\", \"15\", \"30\", \"45\", \"60\", \"120\", \"180\", \"240\", \"1D\", \"1W\", \"1M\"],\n      volume_precision: 1,\n      data_status: 'streaming',\n      intraday_multipliers: [\"1\", \"15\", \"45\", \"60\"],\n      daily_multipliers: [\"1\"],\n      weekly_multipliers: [\"1\"],\n      monthly_multipliers: [\"1\"],\n      supports_timescale_marks: true\n    };\n    _symbolInfoMap[symbolName] = symbolInfo;\n    onSymbolResolvedCallback(symbolInfo);\n    return Promise.resolve(_symbolInfoMap[symbolName]);\n  },\n  subscribeDepth(symbolInfo, callback) {\n    this.resolveSymbol(symbolInfo, response => {\n      subscribeOnStream([response], undefined, callback, \"DOM\" + Date.now().toString(), undefined, undefined, 'depth');\n    }, res => {\n      logMessage(`resolveSymbol error : ${res} `);\n    });\n  },\n  unsubscribeDepth(subscriberUID) {\n    unsubscribeFromStream(subscriberUID);\n  },\n  async getBars(symbolInfo, resolution, periodParams, onHistoryCallback, onErrorCallback) {\n    // console.log(\"[Bars] resolution :\",resolution,periodParams)\n    let requestOptions;\n    var data11;\n    if (resolution == \"1D\" || resolution == \"1W\" || resolution == \"1M\") {\n      // requestOptions = `jData={\"uid\":\"${userid}\",\"exch\":\"${symbolInfo['exchange']}\",\"token\":\"${symbolInfo['base_name']}\",\"st\":\"${periodParams.from - 320000}\",\"et\":\"${periodParams.to}\",\"intrv\":\"${resolution}\"}&jKey=${usession}`;\n      requestOptions = JSON.stringify({\n        \"sym\": symbolInfo.name,\n        \"from\": periodParams.from,\n        \"to\": periodParams.to\n      });\n      data11 = await makeApiRequest(`${myntDCUrl}getdata`, requestOptions);\n      if (data11.length > 0) {\n        data11 = await data11.map(JSON.parse);\n        //  requestOptions = `jData={\"uid\":\"${userid}\",\"exch\":\"${symbolInfo['exchange']}\",\"token\":\"${symbolInfo['base_name']}\",\"st\":\"${periodParams.from - 320000}\",\"et\":\"${periodParams.to}\",\"intrv\":\"${resolution}\"}&jKey=${usession}`;\n        // data11 = await makeApiRequest(`${mynturl}TPSeries`, requestOptions);\n        // console.log(' l i o ooo',data11 , requestOptions)\n        // data11=JSON.parse(data11)\n        // console.log(\"data11 : \",data11)\n      } else {\n        // console.log(\"data11 :::::::: \",data11!=[])\n        onHistoryCallback([], {\n          noData: true\n        });\n        return;\n      }\n    } else {\n      requestOptions = `jData={\"uid\":\"${userid}\",\"exch\":\"${symbolInfo['exchange']}\",\"token\":\"${symbolInfo['base_name']}\",\"st\":\"${periodParams.from - 320000}\",\"et\":\"${periodParams.to}\",\"intrv\":\"${resolution}\"}&jKey=${usession}`;\n      data11 = await makeApiRequest(`${mynturl}TPSeries`, requestOptions);\n      // console.log('else',data11)\n    }\n\n    try {\n      if (data11.stat == 'Not_Ok' || data11 == []) {\n        onHistoryCallback([], {\n          noData: true\n        });\n        return;\n      }\n      let data = data11.map(d => {\n        return {\n          time: parseFloat(d.ssboe),\n          open: parseFloat(d.into),\n          high: parseFloat(d.inth),\n          low: parseFloat(d.intl),\n          close: parseFloat(d.intc),\n          volume: parseFloat(d.intv)\n        };\n      });\n      data = data.sort((a, b) => parseFloat(a.time) - parseFloat(b.time));\n      // console.log(\"[bar] data : \",data)\n      var bars = [];\n      data.forEach(bar => {\n        bars = [...bars, {\n          time: bar.time * 1000,\n          low: bar.low,\n          high: bar.high,\n          open: bar.open,\n          volume: bar.volume,\n          close: bar.close\n        }];\n      });\n      // console.log(\"[bar] data : \",data)\n      if (periodParams.firstDataRequest) {\n        lastBarsCache.set(symbolInfo.name, {\n          ...bars[bars.length - 1]\n        });\n      }\n      onHistoryCallback(bars, {\n        noData: false\n      });\n    } catch (error) {\n      onErrorCallback(error);\n    }\n  },\n  // async getTimescaleMarks(symbolInfo, from, to, onDataCallback, resolution){\n  //     // console.log(\"GET MARKS::\", symbolInfo,from, to, onDataCallback, resolution);\n  //     let symbnam=\"\";\n  //     if(symbolInfo.base_name.includes(\"-\")){\n  //         symbnam = symbolInfo.base_name.split(\"-\")[0]\n  //     }\n  //     else{\n  //         symbnam=symbolInfo.base_name\n  //     }\n  //     var requestOptions = {\n  //         method: 'POST',\n  //         redirect: 'follow'\n  //       };\n\n  //       await fetch(`http://192.168.5.94:5300/CorporateActions?symbol=${symbnam}`, requestOptions)\n  //         .then(response => response.json())\n  //         .then(result => {\n  //             // const res = JSON.parse(result)\n  //             if(result.data !=\"symbol not found\"){\n  //             console.log(\"API res\", result, typeof(result))\n  //             let resca = [];\n  //             for(let i=0; i<result.data.length;i++){\n  //                 resca.push({\n  //                     id:result.data[i]['time'],\n  //                     time:result.data[i]['time'],\n  //                     color:\"red\",\n  //                     label:\"E\",\n  //                     tooltip:result.data[i]['tooltip'],\n  //                 })\n  //             }\n  //             console.log(\"API RES\", resca)\n  //             onDataCallback(resca)\n  //         }\n  //         })\n  //         .catch(error => console.log('error', error));\n  // },\n  subscribeBars(symbolInfo, resolution, onRealtimeCallback, subscriberUID, onResetCacheNeededCallback) {\n    subscribeOnStream([symbolInfo], resolution, onRealtimeCallback, subscriberUID, onResetCacheNeededCallback, lastBarsCache.get(symbolInfo.name), 'bar');\n  },\n  unsubscribeBars(subscriberUID) {\n    unsubscribeFromStream(subscriberUID);\n  },\n  subscribeTtQuotes(symbols, fastSymbols, onRealtimeCallback, listenerGuid) {\n    if (fastSymbols == null) {\n      fastSymbols = symbols;\n    }\n    let allSym = [...new Set(fastSymbols.concat(symbols))];\n    var symbolInfos = {};\n    allSym.forEach(symbol => {\n      this.resolveSymbol(symbol.symbol != undefined ? symbol.symbol : symbol, symbolInfo => {\n        symbolInfos[symbol] = symbolInfo;\n        if (Object.keys(symbolInfos).length == allSym.length) {\n          subscribeOnStream(Object.values(symbolInfos), undefined, onRealtimeCallback, listenerGuid, undefined, undefined, 'tt-quotes');\n        }\n      }, res => {\n        logMessage(`resolveSymbol error : ${res} `);\n      });\n    });\n  }\n};\nasync function getAllSymbols(searchInput, exchange, symbolType) {\n  var exch = \"\";\n  var filterList = [];\n  // console.log(\"[search] getAllSymbols :\",searchInput, exchange, symbolType)\n  if (searchInput.includes(\":\")) {\n    searchInput = searchInput.split(\":\")[1];\n  }\n  switch (exchange) {\n    case \"NSE\":\n      switch (symbolType) {\n        case \"STOCK\":\n          exch = \"NSE\";\n          filterList = [\"NSE\"];\n          break;\n        case \"F&O\":\n          exch = \"NFO\";\n          filterList = [\"NFO\"];\n          break;\n        case \"CURR\":\n          exch = \"CDS\";\n          filterList = [\"CDS\"];\n          break;\n        case \"COMM\":\n          exch = \"NCOM\";\n          filterList = [\"NCOM\"];\n          break;\n        default:\n          exch = \"\";\n          filterList = [\"NSE\", \"NFO\", \"CDS\", \"NCOM\"];\n          break;\n      }\n      break;\n    case \"BSE\":\n      switch (symbolType) {\n        case \"STOCK\":\n          exch = \"BSE\";\n          filterList = [\"BSE\"];\n          break;\n        case \"F&O\":\n          exch = \"BFO\";\n          filterList = [\"BFO\"];\n          break;\n        case \"CURR\":\n          exch = \"BCD\";\n          filterList = [\"BCD\"];\n          break;\n        case \"COMM\":\n          exch = \"BCOM\";\n          filterList = [\"BCOM\"];\n          break;\n        default:\n          exch = \"\";\n          filterList = [\"BSE\", \"BFO\", \"BCD\", \"BCOM\"];\n          break;\n      }\n      break;\n    case \"MCX\":\n      switch (symbolType) {\n        case \"STOCK\":\n          filterList = [];\n          break;\n        case \"F&O\":\n          filterList = [];\n          break;\n        case \"CURR\":\n          filterList = [];\n          break;\n        case \"COMM\":\n          filterList = [\"MCX\"];\n          break;\n        default:\n          exch = \"\";\n          filterList = [\"MCX\"];\n          break;\n      }\n      exch = \"MCX\";\n      break;\n    case \"ALL\":\n      switch (symbolType) {\n        case \"STOCK\":\n          filterList = [\"NSE\", \"BSE\"];\n          break;\n        case \"F&O\":\n          filterList = [\"NFO\", \"BFO\"];\n          break;\n        case \"CURR\":\n          filterList = [\"CDS\", \"BCD\"];\n          break;\n        case \"COMM\":\n          filterList = [\"NCOM\", \"BCOM\", \"MCX\"];\n          break;\n        default:\n          filterList = [\"NSE\", \"NFO\", \"CDS\", \"NCOM\", \"BSE\", \"BFO\", \"BCD\", \"BCOM\", \"MCX\"];\n          break;\n      }\n      exch = \"\";\n      break;\n    default:\n      exch = \"\";\n      break;\n  }\n  // console.log(\"exch\",exch,typeof exch,filterList)\n  var request = `jData={\"uid\":\"${userid}\",\"stext\":\"${searchInput}\"}&jKey=${usession}`;\n  if (exch) {\n    request = `jData={\"uid\":\"${userid}\",\"stext\":\"${searchInput}\",\"exch\":\"${exch}\"}&jKey=${usession}`;\n  }\n  const allSymbols = await makeApiRequest(mynturl + \"SearchScrip\", request);\n  if (allSymbols.stat == \"Not_Ok\") {\n    return [];\n  }\n  let searchSymbols = allSymbols.values.map(value => {\n    let scriptDescription = \"\";\n    let symboltype = value.instname == \"OPTIDX\" ? \"Option\" : value.instname == \"FUTIDX\" ? \"Future\" : value.instname == \"OPTSTK\" ? \"Option\" : value.instname == \"FUTSTK\" ? \"Future\" : value.instname == \"COM\" ? \"Commodity\" : value.instname == \"FUTCUR\" ? \"Future\" : value.instname == \"OPTCUR\" ? \"Option\" : value.instname == \"UNDIND\" ? \"Index\" : value.instname == \"FUTCOM\" ? \"Future\" : value.instname == \"OPTFUT\" ? \"Option\" : \"Stock\";\n    if (value.instname == \"OPTIDX\" || value.instname == \"OPTSTK\" || value.instname == \"OPTCUR\" || value.instname == \"OPTFUT\") {\n      let matchval = value.tsym.match(/(\\d{1,2})[a-zA-Z]{3}(\\d{2,4})?/g);\n      if (matchval) {\n        let scriptList = value.tsym.split(matchval[0]);\n        scriptDescription = `${scriptList[0]}  ${matchval[0].replace(/(..)(...)(..)/, \"$1-$2-$3\")}  ${scriptList[1].substring(0, 1)}E  ${scriptList[1].substring(1)}  ${value.hasOwnProperty('weekly') ? `(week ${value.weekly.substring(1)})` : \"\"}`;\n      }\n    }\n    if (value.instname == \"FUTIDX\" || value.instname == \"FUTSTK\" || value.instname == \"FUTCUR\" || value.instname == \"FUTCOM\") {\n      let matchval = value.tsym.match(/(\\d{1,2})[a-zA-Z]{3}(\\d{2,4})?/g);\n      if (matchval) {\n        let scriptList = value.tsym.split(matchval[0]);\n        scriptDescription = `${scriptList[0]}  ${matchval[0].replace(/(..)(...)(..)/, \"$1-$2-$3\")}  ${scriptList[1].substring(0, 1) == \"F\" ? \"FUT\" : \"FUT\"}  ${scriptList[1].substring(1)}`;\n      }\n    }\n    return {\n      exchanges: value.exch,\n      symbols_types: symboltype,\n      symbol: value.exch + \":\" + value.tsym.toUpperCase(),\n      full_name: value.cname,\n      description: scriptDescription ? scriptDescription : value.cname,\n      exchange: value.exch,\n      ticker: value.exch + \":\" + value.tsym.toUpperCase(),\n      type: symboltype\n    };\n  }).filter(result => {\n    return filterList.includes(result.exchanges);\n  });\n  // console.log(\"searchSymbols :\",searchSymbols)\n  return searchSymbols;\n}","map":{"version":3,"names":["makeApiRequest","subscribeOnStream","unsubscribeFromStream","websocketUnsubscriptionChain","logMessage","mynturl","myntDCUrl","clientid","session","mastersJson","userid","usession","lastBarsCache","Map","window","_symbolInfoMap","configurationData","supported_resolutions","exchanges","symbols_types","name","value","onReady","callback","requestOptions","method","redirect","fetch","then","response","json","result","catch","error","console","log","setTimeout","searchSymbols","userInput","exchange","symbolType","onResultReadyCallback","symbols","getAllSymbols","getQuotes","onDataCallback","onErrorCallback","symbolInfos","forEach","symbol","resolvedata","symbolInfo","Object","keys","length","values","undefined","Date","now","toString","resolveSymbol","subscribeQuotes","fastSymbols","onRealtimeCallback","listenerGuid","res","unsubscribeQuotes","listenerGUID","getltpsub","tokens","promises","map","token","Promise","resolve","exch","tsym","toUpperCase","all","SymbolInfo","symbolList","subscribeQuotesChain","unsubscribeQuotesChain","symbolName","onSymbolResolvedCallback","ErrorCallback","symbolItem","reject","ex","split","typ","ticker","base_name","pro_name","full_name","description","type","timezone","minmov","pricescale","has_intraday","has_no_volume","has_weekly_and_monthly","lot_size","isTradable","qty","step","default","volume_precision","data_status","intraday_multipliers","daily_multipliers","weekly_multipliers","monthly_multipliers","supports_timescale_marks","subscribeDepth","unsubscribeDepth","subscriberUID","getBars","resolution","periodParams","onHistoryCallback","data11","JSON","stringify","from","to","parse","noData","stat","data","d","time","parseFloat","ssboe","open","into","high","inth","low","intl","close","intc","volume","intv","sort","a","b","bars","bar","firstDataRequest","set","subscribeBars","onResetCacheNeededCallback","get","unsubscribeBars","subscribeTtQuotes","allSym","Set","concat","searchInput","filterList","includes","request","allSymbols","scriptDescription","symboltype","instname","matchval","match","scriptList","replace","substring","hasOwnProperty","weekly","cname","filter"],"sources":["C:/Users/Chennai/Downloads/zebu_3.0-4b823f926de64a0d5ae9918ffec446e1b723d4ee/zebu_3.0-4b823f926de64a0d5ae9918ffec446e1b723d4ee/src/alldata/feedFactory.js"],"sourcesContent":["/* eslint-disable */\nimport { makeApiRequest } from './apiConnectionPool.js';\nimport { subscribeOnStream, unsubscribeFromStream ,websocketUnsubscriptionChain} from './webSocketstream.js';\nimport { logMessage } from '../utils/helpers.js';\nimport { mynturl,myntDCUrl,clientid,session } from \"../apiUrl.js\";\n\nexport var mastersJson;\n\n// await makeApiRequest('https://be.mynt.in/Masters', '');\n// export var json = await makeApiRequest('https://be.mynt.in/Masters','');\n\n// var userid = localStorage.getItem('userid');\n// var usession = localStorage.getItem('usession');\n// var actid = localStorage.getItem('actid');\n\nvar userid = clientid;\nvar usession =session;\n\nconst lastBarsCache = new Map();\nwindow._symbolInfoMap = {}\n\nconst configurationData = {\n    supported_resolutions: [\"1\", \"3\", \"5\", \"10\", \"15\", \"30\", \"45\", \"60\", \"120\", \"180\", \"240\", \"1D\", \"1W\", \"1M\"],\n    exchanges: [\n                {\"value\": \"ALL\",\"name\":\"All exchange\"},\n                {\"value\": \"NSE\",\"name\": \"NSE\"},\n                {\"value\": \"BSE\",\"name\": \"BSE\",},\n                {\"value\": \"MCX\",\"name\": \"MCX\",}\n            ],\n    symbols_types: [\n        { name: \"All\", value: \"\" },\n        { name: \"Equity\", value: \"STOCK\" },\n        { name: \"F&O\", value: \"F&O\" },\n        { name: \"Currency\", value: \"CURR\" },\n        { name: \"Commodity\", value: \"COMM\" },\n    ],\n    \"supports_search\": true,\n    \"supports_group_request\": false,\n    \"supports_marks\": false,\n    \"supports_timescale_marks\": true,\n    \"supports_time\": true\n};\n\nexport default {\n    async onReady(callback){\n        // console.log(\"[onReady] Initiated \")\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n          };\n          \n          await fetch(\"https://be.mynt.in/Masters\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                mastersJson = result\n                // console.log(\"API RES:\",result)\n            })\n            .catch(error => console.log('error', error));\n        setTimeout(() => callback(configurationData));\n    },\n    async searchSymbols(userInput, exchange, symbolType, onResultReadyCallback) {\n        const symbols = await getAllSymbols(userInput, exchange, symbolType);\n        onResultReadyCallback(symbols);\n    },\n\n    async getQuotes(symbols, onDataCallback, onErrorCallback) {\n        var symbolInfos = {}\n        symbols.forEach(symbol => {\n            function resolvedata(symbolInfo) {\n                symbolInfos[symbol] = symbolInfo\n                if (Object.keys(symbolInfos).length == symbols.length) {\n                    subscribeOnStream(Object.values(symbolInfos),\n                        undefined,\n                        onDataCallback,\n                        Date.now().toString(),\n                        undefined,\n                        undefined, 'single-quotes')\n                }\n            }\n            this.resolveSymbol(symbol, resolvedata, onErrorCallback)\n        });\n    },\n\n    async subscribeQuotes(symbols, fastSymbols, onRealtimeCallback, listenerGuid) {\n        if (fastSymbols == null) {\n            fastSymbols = symbols\n        }\n        var symbolInfos = {}\n        symbols.forEach(symbol => {\n            function resolvedata(symbolInfo) {\n                symbolInfos[symbol] = symbolInfo\n                // console.log(symbolInfo,'info')\n                if (Object.keys(symbolInfos).length == symbols.length) {\n                    subscribeOnStream(Object.values(symbolInfos),\n                        undefined,\n                        onRealtimeCallback,\n                        listenerGuid,\n                        undefined,\n                        undefined, 'quotes')\n                }\n            }\n            this.resolveSymbol(symbol, resolvedata,(res)=>{\n                logMessage(`resolveSymbol error : ${res} `)\n            })\n        });\n    },\n    async unsubscribeQuotes(listenerGUID) {\n        // console.log(\"[chain] unsubscribeQuotes 1:\",listenerGUID)\n        unsubscribeFromStream(listenerGUID)\n    },\n    // async getltp(symbols, fastSymbols, onRealtimeCallback, listenerGuid) {\n    //     if (fastSymbols == null) {\n    //         fastSymbols = symbols\n    //     }\n    //     var symbolInfos = {}\n    //     symbols.forEach(symbol => {\n    //         function resolvedata(symbolInfo) {\n    //             symbolInfos[symbol] = symbolInfo\n    //             console.log(symbolInfo,'info')\n    //             if (Object.keys(symbolInfos).length == symbols.length) {\n    //                 subscribeOnStream(Object.values(symbolInfos),\n    //                     undefined,\n    //                     onRealtimeCallback,\n    //                     listenerGuid,\n    //                     undefined,\n    //                     undefined, 'quotes')\n    //             }\n    //         }\n    //         this.resolveSymbol(symbol, resolvedata,(res)=>{\n    //             logMessage(`resolveSymbol error : ${res} `)\n    //         })\n    //     });\n    // },\n    // async ungetltp(listenerGUID) {\n    //     // console.log(\"[chain] unsubscribeQuotes 1:\",listenerGUID)\n    //     unsubscribeFromStream(listenerGUID)\n    // },\n    async getltpsub(tokens,onRealtimeCallback,listenerGuid) {\n        // console.log(\"=========== : \",tokens)\n\n        var promises = \n        // tokens.map((token)=> {\n            // console.log(\"=========== : \",token.tsym.toUpperCase())\n              tokens.map((token)=> {\n                // console.log(\"=========== : \",token.tsym.toUpperCase())\n                // console.log(\"=========== : \",token)\n                    return Promise.resolve({\n                        name:`${token.exch}:${token.tsym.toUpperCase()}` ,\n                        exchange:token.exch,\n                        token:token.token\n                    })   \n            })\n        Promise.all(promises).then((SymbolInfo)=>{\n            subscribeOnStream(SymbolInfo,\n                undefined,\n                onRealtimeCallback,\n                listenerGuid,\n                undefined,\n                undefined,'ltp')\n        })\n    },\n    async getltpsub(symbolList) {\n        websocketUnsubscriptionChain(symbolList)\n    },\n\n    subscribeQuotesChain(tokens,onRealtimeCallback,listenerGuid ){\n        // console.log(tokens,onRealtimeCallback,listenerGuid)\n        var promises = tokens.map((token)=> {\n            console.log(\"=========== : \",token.tsym.toUpperCase())\n            // console.log(\"=========== : \",token)\n                return Promise.resolve({\n                    name:`${token.exch}:${token.tsym.toUpperCase()}` ,\n                    exchange:token.exch,\n                    token:token.token\n                })   \n            \n        })\n        // console.log(promises)\n        Promise.all(promises).then((SymbolInfo)=>{\n            subscribeOnStream(SymbolInfo,\n                undefined,\n                onRealtimeCallback,\n                listenerGuid,\n                undefined,\n                undefined,'quotes')\n        })\n            \n    },\n    unsubscribeQuotesChain(symbolList) {\n        // console.log(\"[chain] unsubscribeQuotes 2:\",listenerGuid)\n        websocketUnsubscriptionChain(symbolList)\n    },\n\n    async resolveSymbol(symbolName, onSymbolResolvedCallback, ErrorCallback) {\n\n        if (_symbolInfoMap[symbolName] != undefined) {\n            setTimeout(() => onSymbolResolvedCallback(_symbolInfoMap[symbolName]));\n            return Promise.resolve(_symbolInfoMap[symbolName])\n        }\n        var symbolItem;\n        let symbols = mastersJson[`${symbolName.toUpperCase()}`];\n        symbolItem = symbols\n        if (symbolItem == undefined) {\n            ErrorCallback('cannot resolve symbol');\n            return Promise.reject('cannot resolve symbol');\n        }\n        var ex = symbolName.split(\":\")[0];\n        var typ;\n        if (ex == \"NSE\" || ex == \"BSE\") {\n            typ = \"stock\"\n        }\n        else if (ex == \"NFO\") {\n            typ = \"index\"\n        }\n\n        const symbolInfo = {\n            token: symbolItem[0],\n            ticker: symbolName,\n            name: symbolName,\n            base_name: symbolItem[4] == \"IDX\" ? symbolItem[1] : symbolName.split(\":\")[1],\n            pro_name: symbolName,\n            full_name: symbolName,\n            description: symbolName,\n            type: symbolItem[2],\n            session: symbolName.split(\":\")[0] == \"MCX\" ? \"0900-2330\" : symbolName.split(\":\")[0] == \"CDS\" ? \"0900-1700\" : \"0915-1530\",\n            timezone: \"Asia/Kolkata\",\n            exchange: symbolName.split(\":\")[0],\n            minmov: symbolName.split(\":\")[0] == \"CDS\" ? symbolItem[2] * 10000 : symbolItem[2] * 100,\n            pricescale: symbolName.split(\":\")[0] == \"CDS\" ? 10000 : 100,\n            has_intraday: true,\n            has_no_volume: symbolItem[4] == \"IDX\" ? true : false,\n            has_weekly_and_monthly: true,\n            lot_size: symbolItem[3],\n            isTradable: symbolItem[4] != \"IDX\" ? true : false,\n            qty: {\n                step: symbolName.split(\":\")[0] == \"MCX\" ? 1 : symbolItem[3],\n                default: symbolName.split(\":\")[0] == \"MCX\" ? 1 : symbolItem[3]\n            },\n            supported_resolutions: [\"1\", \"3\", \"5\", \"10\", \"15\", \"30\", \"45\", \"60\", \"120\", \"180\", \"240\", \"1D\", \"1W\", \"1M\"],\n            volume_precision: 1,\n            data_status: 'streaming',\n            intraday_multipliers: [\"1\", \"15\", \"45\", \"60\" ],\n            daily_multipliers:[\"1\"],\n            weekly_multipliers:[\"1\"],\n            monthly_multipliers:[\"1\"],\n            supports_timescale_marks:true\n        };\n        _symbolInfoMap[symbolName] = symbolInfo\n        onSymbolResolvedCallback(symbolInfo);\n        return Promise.resolve(_symbolInfoMap[symbolName])\n    },\n    subscribeDepth(symbolInfo, callback) {\n        this.resolveSymbol(symbolInfo, (response) => {\n            subscribeOnStream([response],\n                undefined,\n                callback,\n                \"DOM\" + Date.now().toString(),\n                undefined,\n                undefined, 'depth')\n        },(res)=>{\n            logMessage(`resolveSymbol error : ${res} `)\n        })\n    },\n    unsubscribeDepth(subscriberUID) {\n        unsubscribeFromStream(subscriberUID)\n    },\n    async getBars(symbolInfo, resolution, periodParams, onHistoryCallback, onErrorCallback) {\n        // console.log(\"[Bars] resolution :\",resolution,periodParams)\n        let requestOptions\n        var data11\n        if(resolution==\"1D\" || resolution==\"1W\" || resolution==\"1M\"){\n            // requestOptions = `jData={\"uid\":\"${userid}\",\"exch\":\"${symbolInfo['exchange']}\",\"token\":\"${symbolInfo['base_name']}\",\"st\":\"${periodParams.from - 320000}\",\"et\":\"${periodParams.to}\",\"intrv\":\"${resolution}\"}&jKey=${usession}`;\n            requestOptions = JSON.stringify({\"sym\":symbolInfo.name,\"from\":periodParams.from,\"to\":periodParams.to})\n            data11 = await makeApiRequest(`${myntDCUrl}getdata`, requestOptions);\n            if(data11.length>0){\n                 data11 = await data11.map(JSON.parse);\n                //  requestOptions = `jData={\"uid\":\"${userid}\",\"exch\":\"${symbolInfo['exchange']}\",\"token\":\"${symbolInfo['base_name']}\",\"st\":\"${periodParams.from - 320000}\",\"et\":\"${periodParams.to}\",\"intrv\":\"${resolution}\"}&jKey=${usession}`;\n                // data11 = await makeApiRequest(`${mynturl}TPSeries`, requestOptions);\n                // console.log(' l i o ooo',data11 , requestOptions)\n                // data11=JSON.parse(data11)\n                // console.log(\"data11 : \",data11)\n            }else{\n                // console.log(\"data11 :::::::: \",data11!=[])\n                onHistoryCallback([], { noData: true });\n                return;\n            }\n            \n        }else{\n            requestOptions = `jData={\"uid\":\"${userid}\",\"exch\":\"${symbolInfo['exchange']}\",\"token\":\"${symbolInfo['base_name']}\",\"st\":\"${periodParams.from - 320000}\",\"et\":\"${periodParams.to}\",\"intrv\":\"${resolution}\"}&jKey=${usession}`;\n            data11 = await makeApiRequest(`${mynturl}TPSeries`, requestOptions);\n            // console.log('else',data11)\n        }\n        try {    \n            if (data11.stat == 'Not_Ok' || data11 == []) {\n                onHistoryCallback([], { noData: true });\n                return;\n            }\n            let data = data11.map(d => {\n                return { time: parseFloat(d.ssboe), open: parseFloat(d.into), high: parseFloat(d.inth), low: parseFloat(d.intl), close: parseFloat(d.intc), volume: parseFloat(d.intv) }\n            });\n            data = data.sort((a, b) => parseFloat(a.time) - parseFloat(b.time));\n            // console.log(\"[bar] data : \",data)\n            var bars = [];\n            data.forEach(bar => {\n                bars = [...bars, {\n                    time: bar.time * 1000,\n                    low: bar.low,\n                    high: bar.high,\n                    open: bar.open,\n                    volume: bar.volume,\n                    close: bar.close,\n                }];\n            });\n            // console.log(\"[bar] data : \",data)\n            if (periodParams.firstDataRequest) {\n                lastBarsCache.set(symbolInfo.name, {\n                    ...bars[bars.length - 1],\n                });\n            }\n            onHistoryCallback(bars, { noData: false });\n            \n        } catch (error) {\n            onErrorCallback(error);\n        }\n    },\n    // async getTimescaleMarks(symbolInfo, from, to, onDataCallback, resolution){\n    //     // console.log(\"GET MARKS::\", symbolInfo,from, to, onDataCallback, resolution);\n    //     let symbnam=\"\";\n    //     if(symbolInfo.base_name.includes(\"-\")){\n    //         symbnam = symbolInfo.base_name.split(\"-\")[0]\n    //     }\n    //     else{\n    //         symbnam=symbolInfo.base_name\n    //     }\n    //     var requestOptions = {\n    //         method: 'POST',\n    //         redirect: 'follow'\n    //       };\n          \n    //       await fetch(`http://192.168.5.94:5300/CorporateActions?symbol=${symbnam}`, requestOptions)\n    //         .then(response => response.json())\n    //         .then(result => {\n    //             // const res = JSON.parse(result)\n    //             if(result.data !=\"symbol not found\"){\n    //             console.log(\"API res\", result, typeof(result))\n    //             let resca = [];\n    //             for(let i=0; i<result.data.length;i++){\n    //                 resca.push({\n    //                     id:result.data[i]['time'],\n    //                     time:result.data[i]['time'],\n    //                     color:\"red\",\n    //                     label:\"E\",\n    //                     tooltip:result.data[i]['tooltip'],\n    //                 })\n    //             }\n    //             console.log(\"API RES\", resca)\n    //             onDataCallback(resca)\n    //         }\n    //         })\n    //         .catch(error => console.log('error', error));\n    // },\n    subscribeBars(symbolInfo, resolution, onRealtimeCallback, subscriberUID, onResetCacheNeededCallback) {\n        subscribeOnStream(\n            [symbolInfo],\n            resolution,\n            onRealtimeCallback,\n            subscriberUID,\n            onResetCacheNeededCallback,\n            lastBarsCache.get(symbolInfo.name), 'bar'\n        );\n    },\n    unsubscribeBars(subscriberUID) {\n        unsubscribeFromStream(subscriberUID);\n    },\n\n    subscribeTtQuotes(symbols, fastSymbols, onRealtimeCallback, listenerGuid) {\n\n        if (fastSymbols == null) {\n            fastSymbols = symbols\n        }\n\n        let allSym = [...new Set(fastSymbols.concat(symbols))]\n        var symbolInfos = {}\n        allSym.forEach(symbol => {\n            this.resolveSymbol(symbol.symbol != undefined ? symbol.symbol : symbol, (symbolInfo) => {\n                symbolInfos[symbol] = symbolInfo\n                if (Object.keys(symbolInfos).length == allSym.length) {\n                    subscribeOnStream(Object.values(symbolInfos),\n                        undefined,\n                        onRealtimeCallback,\n                        listenerGuid,\n                        undefined,\n                        undefined, 'tt-quotes')\n                }\n            },(res)=>{\n                logMessage(`resolveSymbol error : ${res} `)\n            })\n        });\n    },\n}\n\nasync function getAllSymbols(searchInput, exchange, symbolType) {\n    var exch=\"\"\n    var filterList=[]\n    // console.log(\"[search] getAllSymbols :\",searchInput, exchange, symbolType)\n    if (searchInput.includes(\":\")) {\n        searchInput = searchInput.split(\":\")[1];\n    }\n    switch (exchange) {\n        case \"NSE\":\n            switch (symbolType) {\n                case \"STOCK\":\n                    exch=\"NSE\"\n                    filterList=[\"NSE\"]\n                    break;\n                case \"F&O\":\n                    exch=\"NFO\"\n                    filterList=[\"NFO\"]\n                    break;\n                case \"CURR\":\n                    exch=\"CDS\"\n                    filterList=[\"CDS\"]\n                    break;\n                case \"COMM\":\n                    exch=\"NCOM\"\n                    filterList=[\"NCOM\"]\n                    break;\n                default:\n                    exch=\"\"\n                    filterList=[\"NSE\",\"NFO\",\"CDS\",\"NCOM\"]\n                    break;\n            }\n            break;\n\n        case \"BSE\":\n            switch (symbolType) {\n                case \"STOCK\":\n                    exch=\"BSE\"\n                    filterList=[\"BSE\"]\n                    break;\n                case \"F&O\":\n                    exch=\"BFO\"\n                    filterList=[\"BFO\"]\n                    break;\n                case \"CURR\":\n                    exch=\"BCD\"\n                    filterList=[\"BCD\"]\n                    break;\n                case \"COMM\":\n                    exch=\"BCOM\"\n                    filterList=[\"BCOM\"]\n                    break;\n                default:\n                    exch=\"\"\n                    filterList=[\"BSE\",\"BFO\",\"BCD\",\"BCOM\"]\n                    break;\n            }\n            break;\n\n        case \"MCX\":\n            switch (symbolType) {\n                case \"STOCK\":\n                    filterList=[]\n                    break;\n                case \"F&O\":\n                    filterList=[]\n                    break;\n                case \"CURR\":\n                    filterList=[]\n                    break;\n                case \"COMM\":\n                    filterList=[\"MCX\"]\n                    break;\n                default:\n                    exch=\"\"\n                    filterList=[\"MCX\"]\n                    break;\n            }\n            exch=\"MCX\"\n            break;\n            case \"ALL\":\n                switch (symbolType) {\n                    case \"STOCK\":\n                        filterList=[\"NSE\",\"BSE\"]\n                        break;\n                    case \"F&O\":\n                        filterList=[\"NFO\",\"BFO\"]\n                        break;\n                    case \"CURR\":\n                        filterList=[\"CDS\",\"BCD\"]\n                        break;\n                    case \"COMM\":\n                        filterList=[\"NCOM\",\"BCOM\",\"MCX\"]\n                        break;\n                    default:\n                        filterList=[\"NSE\",\"NFO\",\"CDS\",\"NCOM\",\"BSE\",\"BFO\",\"BCD\",\"BCOM\",\"MCX\"]\n                        break;\n                }\n                exch=\"\"\n                break;\n        default:\n              exch=\"\"  \n            break;\n    }\n    // console.log(\"exch\",exch,typeof exch,filterList)\n    var request = `jData={\"uid\":\"${userid}\",\"stext\":\"${searchInput}\"}&jKey=${usession}`;\n    if (exch) {\n        request = `jData={\"uid\":\"${userid}\",\"stext\":\"${searchInput}\",\"exch\":\"${exch}\"}&jKey=${usession}`;\n    }\n    const allSymbols = await makeApiRequest(mynturl+\"SearchScrip\", request);\n    if (allSymbols.stat == \"Not_Ok\") {\n        return []\n    }\n    let searchSymbols = allSymbols.values.map(value => {\n        let scriptDescription = \"\"\n        let symboltype = value.instname == \"OPTIDX\" ? \"Option\" : value.instname == \"FUTIDX\" ? \"Future\" : value.instname == \"OPTSTK\" ? \"Option\" : value.instname == \"FUTSTK\" ? \"Future\" : value.instname == \"COM\" ? \"Commodity\" : value.instname == \"FUTCUR\" ? \"Future\" : value.instname == \"OPTCUR\" ? \"Option\" : value.instname == \"UNDIND\" ? \"Index\" : value.instname == \"FUTCOM\" ? \"Future\" : value.instname == \"OPTFUT\" ? \"Option\" : \"Stock\";\n        if (value.instname == \"OPTIDX\" || value.instname == \"OPTSTK\" || value.instname == \"OPTCUR\" || value.instname == \"OPTFUT\") {\n            let matchval = value.tsym.match(/(\\d{1,2})[a-zA-Z]{3}(\\d{2,4})?/g)\n            if(matchval){\n                let scriptList = value.tsym.split(matchval[0])\n                scriptDescription = `${scriptList[0]}  ${matchval[0].replace(/(..)(...)(..)/, \"$1-$2-$3\")}  ${scriptList[1].substring(0, 1)}E  ${scriptList[1].substring(1)}  ${value.hasOwnProperty('weekly') ? `(week ${value.weekly.substring(1)})` : \"\"}`;\n            }\n        }\n        if (value.instname == \"FUTIDX\" || value.instname == \"FUTSTK\" || value.instname == \"FUTCUR\" || value.instname == \"FUTCOM\") {\n            let matchval = value.tsym.match(/(\\d{1,2})[a-zA-Z]{3}(\\d{2,4})?/g)\n            if(matchval){\n                let scriptList = value.tsym.split(matchval[0])\n                scriptDescription = `${scriptList[0]}  ${matchval[0].replace(/(..)(...)(..)/, \"$1-$2-$3\")}  ${scriptList[1].substring(0, 1) == \"F\" ? \"FUT\" : \"FUT\"}  ${scriptList[1].substring(1)}`;\n            }\n        }\n        return {\n            exchanges: value.exch,\n            symbols_types: symboltype,\n            symbol: value.exch + \":\" + value.tsym.toUpperCase(),\n            full_name: value.cname,\n            description: scriptDescription ? scriptDescription : value.cname,\n            exchange: value.exch,\n            ticker: value.exch + \":\" + value.tsym.toUpperCase(),\n            type: symboltype,\n        };\n    }).filter((result)=>{\n        return filterList.includes(result.exchanges)\n    })\n    // console.log(\"searchSymbols :\",searchSymbols)\n    return searchSymbols\n\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}