{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// export var userid = localStorage.getItem('userid');\n// export var usession = localStorage.getItem('usession');\nimport { mynturl, clientid, session } from '../apiUrl.js';\n\n// import axios from \"axios\";\nexport var userid = clientid;\nexport var usession = session;\nvar watchlistapi = mynturl + \"MarketWatch\";\nexport async function makeApiRequest(path, request) {\n  try {\n    //     let greekconfig = {\n    //         method: \"post\",\n    //         url:path,  \n    //         headers: {\n    //           \"Content-Type\": \"application/json\",\n    //          },\n\n    //     data: request,\n    //   };\n\n    //   axios(greekconfig)\n    //     .then(function (response) {\n    //         return response.json();\n    //     })\n    //     .catch(function (error) {\n    //       console.log(error);\n    //     });\n\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var requestOptions = {\n      method: 'POST',\n      redirect: 'follow',\n      headers: myHeaders,\n      body: request\n    };\n    const response = await fetch(path, requestOptions);\n    // console.log(\"response : \",response)\n    // if (!response.ok) {\n    return response.json();\n    // }\n  } catch (error) {\n    throw new Error(`zebull symbols request error: ${error.status}`);\n  }\n}\nexport async function fetchfromZebullAPI(path, requestOptions) {\n  try {\n    const response = await fetch(path, requestOptions);\n    let resp = response.json();\n    return resp;\n  } catch (error) {\n    throw new Error(`zebull fetch request error: ${error.status}`);\n  }\n}\nexport async function getWatchlistdata(watchlistID, index) {\n  var dataArr = [];\n  let myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  let watchlistName = `jData={\"uid\":\"${userid}\",\"wlname\":\"${watchlistID}\"}&jKey=${usession}`;\n  let indexwl = `jData={\"uid\":\"${userid}\",\"exch\":\"NSE\"}&jKey=${usession}`;\n  var requestOptions = {\n    method: 'POST',\n    redirect: 'follow',\n    headers: myHeaders,\n    body: index == true ? indexwl : watchlistName\n  };\n  var response = index == true ? await fetchfromZebullAPI(mynturl + \"GetIndexList\", requestOptions) : await fetchfromZebullAPI(watchlistapi, requestOptions);\n  if (response.values[0] !== \"No Market Watch\") {\n    for (let scripts in response.values) {\n      let script = response.values[scripts];\n      var quote = {\n        s: 'ok',\n        n: index == true ? `NSE:${script.idxname.toUpperCase()}` : `${script.exch}:${script.tsym.toUpperCase()}`,\n        v: {\n          ch: \"\",\n          chp: \"\",\n          short_name: index == true ? script.idxname.toUpperCase() : script.tsym.toUpperCase(),\n          exchange: index == true ? \"NSE\" : script.exch,\n          description: index == true ? script.idxname.toUpperCase() : script.tsym.toUpperCase(),\n          lp: \"\",\n          ask: \"\",\n          ask_qty: \"\",\n          bid: \"\",\n          bid_qty: \"\",\n          open_price: \"\",\n          high_price: \"\",\n          low_price: \"\",\n          prev_close_price: \"\",\n          volume: \"\"\n        }\n      };\n      dataArr.push(quote);\n    }\n  }\n  return dataArr;\n}\nexport async function updateWatchlistApi(watchlistTitle, watchlistSymbols) {\n  let myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  let watchlistData = `jData={\"uid\":\"${userid}\",\"wlname\":\"${watchlistTitle}\",\"scrips\":\"${watchlistSymbols}\"}&jKey=${usession}`;\n  var requestOptions = {\n    method: 'POST',\n    redirect: 'follow',\n    headers: myHeaders,\n    body: watchlistData\n  };\n  var response = await fetchfromZebullAPI(mynturl + \"AddMultiScripsToMW\", requestOptions);\n  return response;\n}\nexport async function removeWatchlistApi(watchlistTitle, watchlistSymbols) {\n  let myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  let watchlistData = `jData={\"uid\":\"${userid}\",\"wlname\":\"${watchlistTitle}\",\"scrips\":\"${watchlistSymbols}\"}&jKey=${usession}`;\n  var requestOptions = {\n    method: 'POST',\n    redirect: 'follow',\n    headers: myHeaders,\n    body: watchlistData\n  };\n  var response = await fetchfromZebullAPI(mynturl + \"DeleteMultiMWScrips\", requestOptions);\n  return response;\n}","map":{"version":3,"names":["mynturl","clientid","session","userid","usession","watchlistapi","makeApiRequest","path","request","myHeaders","Headers","append","requestOptions","method","redirect","headers","body","response","fetch","json","error","Error","status","fetchfromZebullAPI","resp","getWatchlistdata","watchlistID","index","dataArr","watchlistName","indexwl","values","scripts","script","quote","s","n","idxname","toUpperCase","exch","tsym","v","ch","chp","short_name","exchange","description","lp","ask","ask_qty","bid","bid_qty","open_price","high_price","low_price","prev_close_price","volume","push","updateWatchlistApi","watchlistTitle","watchlistSymbols","watchlistData","removeWatchlistApi"],"sources":["C:/Users/Chennai/Downloads/zebu_3.0-4b823f926de64a0d5ae9918ffec446e1b723d4ee/zebu_3.0-4b823f926de64a0d5ae9918ffec446e1b723d4ee/src/alldata/apiConnectionPool.js"],"sourcesContent":["\n// export var userid = localStorage.getItem('userid');\n// export var usession = localStorage.getItem('usession');\nimport {mynturl ,clientid ,session} from '../apiUrl.js'\n\n// import axios from \"axios\";\nexport var userid = clientid;\nexport var usession = session;\nvar watchlistapi = mynturl+\"MarketWatch\"\n\nexport async function makeApiRequest(path, request) {\n    try {\n    //     let greekconfig = {\n    //         method: \"post\",\n    //         url:path,  \n    //         headers: {\n    //           \"Content-Type\": \"application/json\",\n    //          },\n        \n    //     data: request,\n    //   };\n\n    //   axios(greekconfig)\n    //     .then(function (response) {\n    //         return response.json();\n    //     })\n    //     .catch(function (error) {\n    //       console.log(error);\n    //     });\n\n        let myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptions = {\n            method: 'POST',\n            redirect: 'follow',\n            headers: myHeaders,\n            body: request\n        };\n        const response = await fetch(path, requestOptions);\n        // console.log(\"response : \",response)\n        // if (!response.ok) {\n            return response.json();\n        // }\n      \n       \n\n    } catch (error) {\n        throw new Error(`zebull symbols request error: ${error.status}`);\n    }\n}\n\nexport async function fetchfromZebullAPI(path, requestOptions) {\n    try {\n        const response = await fetch(path, requestOptions);\n        let resp=response.json();\n        return resp\n    } catch (error) {\n        throw new Error(`zebull fetch request error: ${error.status}`);\n    }\n}\n\nexport async function getWatchlistdata(watchlistID,index) {\n    var dataArr = []\n   \n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    let watchlistName = `jData={\"uid\":\"${userid}\",\"wlname\":\"${watchlistID}\"}&jKey=${usession}`\n    let indexwl = `jData={\"uid\":\"${userid}\",\"exch\":\"NSE\"}&jKey=${usession}`\n    var requestOptions = {\n        method: 'POST',\n        redirect: 'follow',\n        headers: myHeaders,\n        body: index==true ? indexwl:watchlistName\n    };\n\n    var response= index==true ? await fetchfromZebullAPI(mynturl+\"GetIndexList\", requestOptions) : await fetchfromZebullAPI(watchlistapi, requestOptions)\n        if (response.values[0] !== \"No Market Watch\") {\n            \n            for (let scripts in response.values) {\n                let script = response.values[scripts]\n                var quote = {\n                    s: 'ok',\n                    n: index==true ? `NSE:${script.idxname.toUpperCase()}` : `${script.exch}:${script.tsym.toUpperCase()}`,\n                    v: {\n                        ch: \"\",\n                        chp: \"\",\n                        short_name: index==true ? script.idxname.toUpperCase() : script.tsym.toUpperCase(),\n                        exchange: index==true ? \"NSE\" : script.exch,\n                        description: index==true ? script.idxname.toUpperCase() : script.tsym.toUpperCase(),\n                        lp: \"\",\n                        ask: \"\",\n                        ask_qty: \"\",\n                        bid: \"\",\n                        bid_qty: \"\",\n                        open_price: \"\",\n                        high_price: \"\",\n                        low_price: \"\",\n                        prev_close_price: \"\",\n                        volume: \"\"\n                    }\n                }\n                dataArr.push(quote)\n            }\n        }\n    return dataArr\n}\n\nexport async function updateWatchlistApi(watchlistTitle,watchlistSymbols) {\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    let watchlistData = `jData={\"uid\":\"${userid}\",\"wlname\":\"${watchlistTitle}\",\"scrips\":\"${watchlistSymbols}\"}&jKey=${usession}`\n    var requestOptions = {\n        method: 'POST',\n        redirect: 'follow',\n        headers: myHeaders,\n        body: watchlistData\n    };\n    var response=await fetchfromZebullAPI(mynturl+\"AddMultiScripsToMW\", requestOptions)\n    return response\n}\n\n\nexport async function removeWatchlistApi(watchlistTitle,watchlistSymbols) { \n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    let watchlistData = `jData={\"uid\":\"${userid}\",\"wlname\":\"${watchlistTitle}\",\"scrips\":\"${watchlistSymbols}\"}&jKey=${usession}`\n    var requestOptions = {\n        method: 'POST',\n        redirect: 'follow',\n        headers: myHeaders,\n        body: watchlistData\n    };\n\n    var response=await fetchfromZebullAPI(mynturl+\"DeleteMultiMWScrips\", requestOptions)\n    return response\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}