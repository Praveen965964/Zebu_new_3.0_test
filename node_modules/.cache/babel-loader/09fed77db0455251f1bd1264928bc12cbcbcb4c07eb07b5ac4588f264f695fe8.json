{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable no-extra-boolean-cast */\n// import Vue from \"vue\";\n// import Cryptojs from \"crypto-js\";\n// Vue.use(Cryptojs);\nimport { webSocketURL } from '../apiUrl.js';\n// import { webSocketURL,source } from '../apiUrl.js'\nimport { logMessage } from '../utils/helpers.js';\nimport { userid, usession } from '../alldata/apiConnectionPool';\nimport { BrokerApiIns, placedOrder } from \"../alldata/brokerapis\";\nconst moment = require('moment');\nvar connectionStatus = false;\nconst socket = new WebSocket(webSocketURL);\n// console.log(BrokerApiIns,'BrokerApiIns',placedOrder)\nconst channelToSubscription = new Map();\nconst singleQuoteMap = new Map();\nconst guidToSubscription = new Map();\nvar socketPreResponse = new Map();\nconst prelog = [];\n\n// const tokenid = `${userid}_${source}`\nconst tokenid = `${userid}`;\nconst userId = userid;\nexport var titleIndex = {\n  indexLP: \"\",\n  changePer: \"\"\n};\n// export var ltp;\nsocket.onopen = function () {\n  connectionRequest(tokenid, userId);\n  prelog.forEach(message => {\n    send(message);\n  });\n};\nsocket.onmessage = function (msg) {\n  var responseFeed = JSON.parse(msg.data);\n  // console.log(responseFeed)\n  if (!!responseFeed.t && responseFeed.t == 'ck' && responseFeed.s == 'OK') {\n    connectionStatus = true;\n  } else if (!!responseFeed.t && responseFeed.t == 'ck' && responseFeed.s == 'NOT_OK') {\n    logMessage(\"!==========[Socket Session Invalid]============!\");\n  }\n  if (responseFeed.t) {\n    ProcessPacketString(responseFeed);\n  }\n};\nsocket.onclose = function (event) {\n  socket.close();\n  logMessage(`[socket] onclose:: ${event}`, 1);\n};\nsocket.onerror = function (event) {\n  logMessage(`[socket] Error: ${event} type ${event.type}`, 2);\n  socket.onclose();\n};\nasync function connectionRequest(tokenid, userId) {\n  var initCon = {\n    susertoken: usession,\n    t: \"c\",\n    actid: userId,\n    uid: userId\n    // source: source\n  };\n\n  var ordcon = {\n    t: \"o\",\n    actid: userId\n  };\n  send(JSON.stringify(initCon));\n  setTimeout(() => {\n    send(JSON.stringify(ordcon));\n  }, \"2000\");\n}\nasync function send(msg) {\n  if (!!socket.readyState && socket.readyState == 1) {\n    try {\n      socket.send(msg);\n    } catch (err) {\n      console.error(\"socket send error : \", err);\n    }\n  } else if (!!socket.readyState && socket.readyState == 0) {\n    setTimeout(() => {\n      socket.send(msg);\n    }, 900);\n  } else {\n    logMessage(\"[socket send] socket connection is undefined\", 2);\n  }\n}\nasync function establishConnection(payload) {\n  if (connectionStatus == false) {\n    await connectionRequest(tokenid, userId);\n  }\n  await send(JSON.stringify(payload));\n}\nexport function closeConnection() {\n  socket.close();\n  channelToSubscription.clear();\n  singleQuoteMap.clear();\n  guidToSubscription.clear();\n}\nexport async function websocketSubscription(payload) {\n  if (connectionStatus) {\n    var channel = ''; //BSE|1#NSE|26017#NSE|26040#NSE|26009#NSE|26000#\n\n    channel += `${payload}`;\n    if (channel != '' && !!channel) {\n      var tempChannel = channel.substring(0, channel.length - 1);\n      var tempUniqueArray = tempChannel.split('#');\n      var uniqueChannel = '';\n      const uniqueArray = new Set(tempUniqueArray);\n      uniqueArray.forEach(element => {\n        uniqueChannel += element + '#';\n      });\n      let json = {\n        k: uniqueChannel.substring(0, uniqueChannel.length - 1),\n        t: 'd'\n      };\n      await establishConnection(json);\n    }\n  }\n}\nexport async function websocketUnsubscriptionChain(payload) {\n  if (connectionStatus) {\n    var channel = '';\n    channel += `${payload}`;\n    if (channel != '' && !!channel) {\n      var tempChannel = channel.substring(0, channel.length - 1);\n      var tempUniqueArray = tempChannel.split('#');\n      var uniqueChannel = '';\n      const uniqueArray = new Set(tempUniqueArray);\n      uniqueArray.forEach(element => {\n        uniqueChannel += element + '#';\n      });\n      let json = {\n        k: uniqueChannel.substring(0, uniqueChannel.length - 1),\n        t: 'ud'\n      };\n      await establishConnection(json);\n    }\n  }\n}\nexport function getvalues(symbols, resolution, onRealtimeCallback, subscribeUID, onResetCacheNeededCallback, lastDailyBar, type) {\n  if (type == 'depth') {\n    // console.log(\"[depth] subscribeOnStream : \", symbols, type, subscribeUID)\n    _subscribeltp(symbols[0], onRealtimeCallback, subscribeUID);\n  }\n  if (type == 'quotes' || type == 'tt-quotes') {\n    _subscribeQuotes(symbols, onRealtimeCallback, subscribeUID, type);\n  } else if (type == 'bar') {\n    _subscribeBars(symbols, onRealtimeCallback, subscribeUID, lastDailyBar, resolution);\n  } else if (type == 'single-quotes') {\n    _subscribeSingleQuotes(symbols, onRealtimeCallback, subscribeUID);\n  }\n  // else if (type == 'ltp') {\n  //     _subscribeltps(symbols, onRealtimeCallback, subscribeUID)\n  // }\n}\n\nfunction _subscribeltp(symbol, onRealtimeCallback, subscribeUID) {\n  var channelString = `${symbol.exchange}|${symbol.token}#`;\n  // console.log(\"[depth] _subscribeDepth : \", channelString, symbol,)\n  _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, 'depth');\n  websocketSubscription(channelString);\n}\nexport function subscribeOnStream(symbols, resolution, onRealtimeCallback, subscribeUID, onResetCacheNeededCallback, lastDailyBar, type) {\n  if (type == 'depth') {\n    // console.log(\"[depth] subscribeOnStream : \", symbols, type, subscribeUID)\n    _subscribeDepth(symbols[0], onRealtimeCallback, subscribeUID);\n  }\n  if (type == 'quotes' || type == 'tt-quotes') {\n    _subscribeQuotes(symbols, onRealtimeCallback, subscribeUID, type);\n  } else if (type == 'bar') {\n    _subscribeBars(symbols, onRealtimeCallback, subscribeUID, lastDailyBar, resolution);\n  } else if (type == 'single-quotes') {\n    _subscribeSingleQuotes(symbols, onRealtimeCallback, subscribeUID);\n  }\n  // else if (type == 'ltp'){\n  //     _subscribeltps(symbols, onRealtimeCallback, subscribeUID)\n  // }\n}\n// function _subscribeltps(symbol, onRealtimeCallback, subscribeUID) {\n//     var channelString = `${symbol.exchange}|${symbol.token}#`\n//     console.log(\"[ltp] _subscribeDepth : \", channelString, symbol,)\n//     _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, 'ltp')\n//     websocketSubscription(channelString)\n// }\nexport function unsubscribeFromStream(listenerGuid) {\n  // console.log(\"[unsubscribe] listenerGuid : \",listenerGuid,guidToSubscription)\n\n  let channelString = guidToSubscription.get(listenerGuid);\n  let subscriptionItem = channelToSubscription.get(channelString);\n  if (subscriptionItem) {\n    subscriptionItem.handlers = subscriptionItem.handlers.filter(function (handler) {\n      return handler.id != listenerGuid;\n    });\n    if (typeof subscriptionItem.handlers !== undefined && subscriptionItem.handlers.length == 0) {\n      websocketSubscription(channelString);\n      channelToSubscription.delete(channelString);\n    }\n  }\n}\nexport function unsubscribeQuotesfromStream(listenerGuid) {\n  // console.log(\"[unsubscribe] listenerGuid : \",listenerGuid,guidToSubscription)\n\n  let channelString = guidToSubscription.get(listenerGuid);\n  let subscriptionItem = channelToSubscription.get(channelString);\n  if (subscriptionItem) {\n    subscriptionItem.handlers = subscriptionItem.handlers.filter(function (handler) {\n      return handler.id != listenerGuid;\n    });\n    if (typeof subscriptionItem.handlers !== undefined && subscriptionItem.handlers.length == 0) {\n      websocketSubscription(channelString);\n      channelToSubscription.delete(channelString);\n    }\n  }\n}\nfunction _subscribeQuotes(symbols, onRealtimeCallback, subscribeUID, type) {\n  symbols.forEach(function set(symbol) {\n    // console.log(symbol)\n\n    let channelString = `${symbol.exchange}|${symbol.token}#`;\n    _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, type);\n    websocketSubscription(channelString);\n  });\n}\nfunction _subscribeDepth(symbol, onRealtimeCallback, subscribeUID) {\n  var channelString = `${symbol.exchange}|${symbol.token}#`;\n  // console.log(\"[depth] _subscribeDepth : \", channelString, symbol,)\n  _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, 'depth');\n  websocketSubscription(channelString);\n}\nfunction _subscribeBars(symbols, onRealtimeCallback, subscribeUID, lastDailyBar, resolution) {\n  symbols.forEach(function set(symbol) {\n    let channelString = `${symbol.exchange}|${symbol.token}#`;\n    _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, 'bar', resolution, lastDailyBar);\n    websocketSubscription(channelString);\n  });\n}\nfunction _subscribeSingleQuotes(symbols, onRealtimeCallback, subscribeUID) {\n  symbols.forEach(function set(symbol) {\n    let channelString = `${symbol.exchange}|${symbol.token}#`;\n    let existing = singleQuoteMap.get(subscribeUID);\n    if (existing) {\n      existing[`${symbol.exchange}|${symbol.token}#`] = {\n        quote: {}\n      };\n    } else {\n      singleQuoteMap.set(subscribeUID, new Object());\n      singleQuoteMap.get(subscribeUID)[`${symbol.exchange}|${symbol.token}#`] = {\n        quote: {},\n        symbol: symbol.name\n      };\n    }\n    _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, 'single-quotes');\n    websocketSubscription(channelString);\n  });\n}\nfunction _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, type, resolution, lastDailyBar) {\n  let subscriptionItem = channelToSubscription.get(channelString);\n  let handler = {\n    id: subscribeUID,\n    callback: onRealtimeCallback\n  };\n  if (subscriptionItem) {\n    var index = subscriptionItem.handlers.findIndex(ob => {\n      return ob.id == subscribeUID;\n    });\n    if (index == -1) {\n      subscriptionItem.handlers.push({\n        handler: handler,\n        type: type,\n        resolution: resolution,\n        lastDailyBar: lastDailyBar,\n        symbol: symbol.name,\n        id: subscribeUID\n      });\n    } else {\n      subscriptionItem.handlers[index] = {\n        handler: handler,\n        type: type,\n        resolution: resolution,\n        lastDailyBar: lastDailyBar,\n        symbol: symbol.name,\n        id: subscribeUID\n      };\n    }\n  } else {\n    subscriptionItem = {\n      handlers: [{\n        handler: handler,\n        type: type,\n        resolution: resolution,\n        lastDailyBar: lastDailyBar,\n        symbol: symbol.name,\n        id: subscribeUID\n      }]\n    };\n    channelToSubscription.set(channelString, subscriptionItem);\n  }\n  guidToSubscription.set(subscribeUID, channelString);\n  // console.log(guidToSubscription,'jio')\n  if (!guidToSubscription.has(subscribeUID)) {\n    console.error(\"guid fail\");\n  }\n}\nexport function ProcessPacketString(responseFeed) {\n  try {\n    if (responseFeed.t == \"am\" && responseFeed.dmsg) {\n      // console.log(\"Alert Triggered\")\n      var params = {\n        title: 'Alert',\n        body: responseFeed.dmsg,\n        callback: res => {\n          if (res) {\n            logMessage(res);\n          }\n        }\n      };\n      window.tvWidget.showNoticeDialog(params);\n    } else if (responseFeed.t == \"om\" && responseFeed.status == \"COMPLETE\") {\n      // if(responseFeed.norenordno == placedOrder[responseFeed.norenordno])\n      // console.log(\"responseFeed.norenordno\", responseFeed.norenordno, placedOrder)\n      BrokerApiIns._host.showNotification(`Order ${placedOrder[responseFeed.norenordno].id} is ${responseFeed.status}`, `${placedOrder[responseFeed.norenordno].qty} ${placedOrder[responseFeed.norenordno].side == 1 ? \"BUY\" : \"SELL\"} for ${responseFeed.tsym} is ${responseFeed.status}`, placedOrder[responseFeed.norenordno].status == 5 || placedOrder[responseFeed.norenordno].status == 1 ? 0 : 1);\n      BrokerApiIns._host.currentAccountUpdate();\n    } else if (responseFeed.t === \"dk\") {\n      var depth = {\n        snapshot: true,\n        asks: [{\n          price: parseFloat(responseFeed[\"sp1\"]) ? parseFloat(responseFeed[\"sp1\"]) : parseFloat(responseFeed[\"lp\"]),\n          volume: parseInt(responseFeed[\"sq1\"]) ? parseInt(responseFeed[\"sq1\"]) : 0\n        }, {\n          price: parseFloat(responseFeed[\"sp2\"]) ? parseFloat(responseFeed[\"sp2\"]) : parseFloat(responseFeed[\"lp\"]),\n          volume: parseInt(responseFeed[\"sq2\"]) ? parseInt(responseFeed[\"sq2\"]) : 0\n        }, {\n          price: parseFloat(responseFeed[\"sp3\"]) ? parseFloat(responseFeed[\"sp3\"]) : parseFloat(responseFeed[\"lp\"]),\n          volume: parseInt(responseFeed[\"sq3\"]) ? parseInt(responseFeed[\"sq3\"]) : 0\n        }, {\n          price: parseFloat(responseFeed[\"sp4\"]) ? parseFloat(responseFeed[\"sp4\"]) : parseFloat(responseFeed[\"lp\"]),\n          volume: parseInt(responseFeed[\"sq4\"]) ? parseInt(responseFeed[\"sq4\"]) : 0\n        }, {\n          price: parseFloat(responseFeed[\"sp5\"]) ? parseFloat(responseFeed[\"sp5\"]) : parseFloat(responseFeed[\"lp\"]),\n          volume: parseInt(responseFeed[\"sq5\"]) ? parseInt(responseFeed[\"sq5\"]) : 0\n        }],\n        bids: [{\n          price: parseFloat(responseFeed[\"bp5\"]) ? parseFloat(responseFeed[\"bp5\"]) : parseFloat(responseFeed[\"lp\"]),\n          volume: parseInt(responseFeed[\"bq5\"]) ? parseInt(responseFeed[\"bq5\"]) : 0\n        }, {\n          price: parseFloat(responseFeed[\"bp4\"]) ? parseFloat(responseFeed[\"bp4\"]) : parseFloat(responseFeed[\"lp\"]),\n          volume: parseInt(responseFeed[\"bq4\"]) ? parseInt(responseFeed[\"bq4\"]) : 0\n        }, {\n          price: parseFloat(responseFeed[\"bp3\"]) ? parseFloat(responseFeed[\"bp3\"]) : parseFloat(responseFeed[\"lp\"]),\n          volume: parseInt(responseFeed[\"bq3\"]) ? parseInt(responseFeed[\"bq3\"]) : 0\n        }, {\n          price: parseFloat(responseFeed[\"bp2\"]) ? parseFloat(responseFeed[\"bp2\"]) : parseFloat(responseFeed[\"lp\"]),\n          volume: parseInt(responseFeed[\"bq2\"]) ? parseInt(responseFeed[\"bq2\"]) : 0\n        }, {\n          price: parseFloat(responseFeed[\"bp1\"]) ? parseFloat(responseFeed[\"bp1\"]) : parseFloat(responseFeed[\"lp\"]),\n          volume: parseInt(responseFeed[\"bq1\"]) ? parseInt(responseFeed[\"bq1\"]) : 0\n        }]\n      };\n      var tradeTime;\n      let preQuote = {\n        ch: parseFloat(responseFeed[\"lp\"]) ? parseFloat(responseFeed[\"lp\"]) - parseFloat(responseFeed[\"c\"]) : 0,\n        chp: parseFloat(responseFeed[\"pc\"]) ? parseFloat(responseFeed[\"pc\"]) : 0,\n        lp: responseFeed[\"lp\"] ? parseFloat(responseFeed[\"lp\"]) : 0,\n        open_price: responseFeed[\"o\"] ? parseFloat(responseFeed[\"o\"]) : 0,\n        high_price: responseFeed[\"h\"] ? parseFloat(responseFeed[\"h\"]) : 0,\n        low_price: responseFeed[\"l\"] ? parseFloat(responseFeed[\"l\"]) : 0,\n        prev_close_price: responseFeed[\"c\"] ? parseFloat(responseFeed[\"c\"]) : 0,\n        volume: responseFeed[\"v\"] ? parseInt(responseFeed[\"v\"]) : 0,\n        token: responseFeed[\"tk\"],\n        exchange: responseFeed[\"e\"],\n        market_segment_id: responseFeed[\"e\"],\n        description: responseFeed[\"ts\"],\n        short_name: responseFeed[\"ts\"],\n        oi: responseFeed[\"oi\"] ? responseFeed[\"oi\"] : 0,\n        toi: responseFeed[\"toi\"] ? responseFeed[\"toi\"] : 0,\n        poi: responseFeed[\"poi\"] ? responseFeed[\"poi\"] : 0,\n        ask: parseFloat(responseFeed[\"sp1\"]) ? parseFloat(responseFeed[\"sp1\"]) : parseFloat(responseFeed[\"lp\"]),\n        ask_qty: parseInt(responseFeed[\"sq1\"]) ? parseInt(responseFeed[\"sq1\"]) : 0,\n        bid: parseFloat(responseFeed[\"bp1\"]) ? parseFloat(responseFeed[\"bp1\"]) : parseFloat(responseFeed[\"lp\"]),\n        bid_qty: parseInt(responseFeed[\"bq1\"]) ? parseInt(responseFeed[\"bq1\"]) : 0,\n        depth: depth\n      };\n      tradeTime = Number(responseFeed[\"ft\"]) * 1000;\n      if (!socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`)) {\n        socketPreResponse.set(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`, preQuote);\n      }\n    } else if (responseFeed.t === \"df\") {\n      tradeTime = Number(responseFeed[\"ft\"]) * 1000;\n      if (\"lp\" in responseFeed) {\n        socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp = responseFeed[\"lp\"];\n      }\n      if (\"o\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).open_price = parseFloat(responseFeed[\"o\"]);\n      if (\"h\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).high_price = parseFloat(responseFeed[\"h\"]);\n      if (\"l\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).low_price = parseFloat(responseFeed[\"l\"]);\n      if (\"c\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).prev_close_price = parseFloat(responseFeed[\"c\"]);\n      if (\"v\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).volume = parseInt(responseFeed[\"v\"]);\n      if (\"pc\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).chp = parseFloat(responseFeed[\"pc\"]);\n      if (\"oi\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).oi = parseFloat(responseFeed[\"oi\"]);\n      if (\"toi\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).toi = parseFloat(responseFeed[\"toi\"]);\n      if (\"poi\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).poi = parseFloat(responseFeed[\"poi\"]);\n      socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).ch = socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp - socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).prev_close_price;\n      if (\"sp1\" in responseFeed) {\n        socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[0].price = parseFloat(responseFeed[\"sp1\"]);\n        socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).ask = parseFloat(responseFeed[\"sp1\"]);\n      }\n      if (\"sq1\" in responseFeed) {\n        socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[0].volume = parseInt(responseFeed[\"sq1\"]);\n        socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).ask_qty = parseInt(responseFeed[\"sq1\"]);\n      }\n      if (\"sp2\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[1].price = parseFloat(responseFeed[\"sp2\"]);\n      if (\"sq2\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[1].volume = parseInt(responseFeed[\"sq2\"]);\n      if (\"sp3\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[2].price = parseFloat(responseFeed[\"sp3\"]);\n      if (\"sq3\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[2].volume = parseInt(responseFeed[\"sq3\"]);\n      if (\"sp4\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[3].price = parseFloat(responseFeed[\"sp4\"]);\n      if (\"sq4\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[3].volume = parseInt(responseFeed[\"sq4\"]);\n      if (\"sp5\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[4].price = parseFloat(responseFeed[\"sp5\"]);\n      if (\"sq5\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[4].volume = parseInt(responseFeed[\"sq5\"]);\n      if (\"bp1\" in responseFeed) {\n        socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[4].price = parseFloat(responseFeed[\"bp1\"]);\n        socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).bid = parseFloat(responseFeed[\"bp1\"]);\n      }\n      if (\"bq1\" in responseFeed) {\n        socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[4].volume = parseInt(responseFeed[\"bq1\"]);\n        socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).bid_qty = parseInt(responseFeed[\"bq1\"]);\n      }\n      if (\"bp2\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[3].price = parseFloat(responseFeed[\"bp2\"]);\n      if (\"bq2\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[3].volume = parseInt(responseFeed[\"bq2\"]);\n      if (\"bp3\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[2].price = parseFloat(responseFeed[\"bp3\"]);\n      if (\"bq3\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[2].volume = parseInt(responseFeed[\"bq3\"]);\n      if (\"bp4\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[1].price = parseFloat(responseFeed[\"bp4\"]);\n      if (\"bq4\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[1].volume = parseInt(responseFeed[\"bq4\"]);\n      if (\"bp5\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[0].price = parseFloat(responseFeed[\"bp5\"]);\n      if (\"bq5\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[0].volume = parseInt(responseFeed[\"bq5\"]);\n    }\n    let channelString = `${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`;\n    let subscriptionItem = channelToSubscription.get(channelString);\n    // console.log('subscriptionItem',subscriptionItem)\n    if (subscriptionItem === undefined) {\n      return;\n    }\n    if (subscriptionItem.handlers === undefined) {\n      return;\n    }\n    subscriptionItem.handlers.forEach(function callHandler(handler) {\n      if (handler.type == 'quotes') {\n        let quote = {\n          s: 'ok',\n          n: handler.symbol,\n          v: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`)\n        };\n        try {\n          handler.handler.callback([quote]);\n        } catch (err) {\n          console.info(err);\n        }\n      } else if (handler.type == 'tt-quotes') {\n        let quote = {\n          s: 'success',\n          n: handler.symbol,\n          v: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`)\n        };\n        try {\n          handler.handler.callback(quote);\n        } catch (err) {\n          console.info(err);\n        }\n      } else if (handler.type == 'bar') {\n        // console.log(\"handler.symbol : \",handler.symbol)\n        document.title = `${socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp}@${handler.symbol.split(\":\")[1]} ${socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).chp < 0 ? '▼' : '▲'} (${socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).chp}%)`;\n        const lastDailyBar = handler.lastDailyBar;\n        const resolution = handler.resolution;\n        var nextDailyBarTime;\n        if (resolution == '1' || resolution == 1) {\n          nextDailyBarTime = getNextMinBarTime(lastDailyBar != null ? lastDailyBar.time : null);\n        } else if (resolution == '1D') {\n          tradeTime = moment(tradeTime).startOf('day').toDate().getTime() + 19800000; //that day start \n          tradeTime = moment(tradeTime).startOf('day').toDate().getTime() + 19800000; //that day start \n          nextDailyBarTime = getNextDailyBarTime(lastDailyBar != null ? lastDailyBar.time : null);\n        } else if (resolution == '1M') {\n          tradeTime = moment(tradeTime).startOf('month').toDate().getTime() + 19800000;\n          nextDailyBarTime = getNextMonthBarTime(lastDailyBar != null ? lastDailyBar.time : null);\n        }\n        let bar;\n        // console.log(\"[bar] nextDailyBarTime : \",nextDailyBarTime,typeof nextDailyBarTime,tradeTime,typeof tradeTime,\"\\ncondition: \",tradeTime >= nextDailyBarTime)\n        if (tradeTime >= nextDailyBarTime) {\n          // console.log(\"lastDailyBar  tradeTime>nextDailyBarTime TRUE : \",resolution,tradeTime,nextDailyBarTime)\n          if (resolution == '1D') {\n            // console.log(\"lastDailyBar  tradeTime>nextDailyBarTime TRUE IF 1D: \",tradeTime,nextDailyBarTime)\n            bar = {\n              time: nextDailyBarTime,\n              open: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).open_price,\n              high: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).high_price,\n              low: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).low_price,\n              close: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n              volume: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).volume\n            };\n          } else {\n            // console.log(\"lastDailyBar  tradeTime>nextDailyBarTime TRUE ELSE 1D: \",tradeTime,nextDailyBarTime)\n            bar = {\n              time: nextDailyBarTime,\n              open: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n              high: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n              low: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n              close: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp\n            };\n          }\n        } else {\n          if (resolution == '1D') {\n            // console.log(\"lastDailyBar  tradeTime>nextDailyBarTime FALSE IF 1D: \",tradeTime,nextDailyBarTime)\n\n            bar = {\n              ...lastDailyBar,\n              high: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).high_price,\n              low: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).low_price,\n              close: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n              volume: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).volume\n            };\n          } else {\n            // console.log(\"lastDailyBar  tradeTime>nextDailyBarTime FALSE ELSE 1D: \",tradeTime,nextDailyBarTime)\n            bar = {\n              ...lastDailyBar,\n              high: Math.max(lastDailyBar != null ? lastDailyBar.high : 0, socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp),\n              low: Math.min(lastDailyBar != null ? lastDailyBar.low : 0, socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp),\n              close: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp\n            };\n          }\n        }\n        handler.handler.callback(bar);\n\n        // console.log(bar,'ltp')\n        handler.lastDailyBar = bar;\n\n        //    localStorage.setItem('ltp',bar['high'])    \n      } else if (handler.type == 'single-quotes') {\n        let quote = {\n          s: 'success',\n          n: handler.symbol,\n          v: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`)\n        };\n        let mapper = singleQuoteMap.get(handler.id);\n        if (mapper) {\n          let all = true;\n          let callbackResp = [];\n          mapper[`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`].quote = quote;\n          for (const [, value] of Object.entries(mapper)) {\n            if (Object.keys(value.quote).length === 0) {\n              all = false;\n            } else {\n              callbackResp.push({\n                \"s\": \"ok\",\n                \"n\": value.quote.n,\n                \"v\": {\n                  \"ch\": value.quote.v.ch,\n                  \"chp\": value.quote.v.chp,\n                  \"short_name\": value.quote.n,\n                  \"exchange\": value.quote.v.exchange,\n                  \"description\": value.quote.n,\n                  \"lp\": value.quote.v.lp,\n                  \"ask\": value.quote.v.ask || 0,\n                  \"bid\": value.quote.v.bid || 0,\n                  \"open_price\": value.quote.v.open_price,\n                  \"high_price\": value.quote.v.high_price,\n                  \"low_price\": value.quote.v.low_price,\n                  \"prev_close_price\": value.quote.v.prev_close_price,\n                  \"volume\": value.quote.v.volume\n                }\n              });\n            }\n          }\n          if (all) {\n            handler.handler.callback(callbackResp);\n            singleQuoteMap.delete(handler.handler.id);\n            unsubscribeFromStream(handler.handler.id);\n          }\n        }\n      } else if (handler.type == 'depth') {\n        // console.log(\"[depth] depth List: \", socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`))\n        // socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks = socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks.sort((a, b) => (a.price > b.price) ? 1 : ((b.price > a.price) ? -1 : 0))\n        // socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids = socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids.sort((a, b) => (a.price > b.price) ? 1 : ((b.price > a.price) ? -1 : 0))\n        handler.handler.callback(socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth);\n      }\n    });\n  } catch (e) {\n    // console.log(\"ERROR : \", e)\n  }\n  // console.log(ltp,'ltp')\n  // return ltp\n}\n\nfunction getNextDailyBarTime(barTime) {\n  var new_date = moment(barTime).add('1', 'd').startOf('day').toDate();\n  return new_date.getTime() + 19800000;\n  // return (barTime - (barTime % 86400))+ 19800000\n}\n\nfunction getNextMonthBarTime(barTime) {\n  var new_date = moment(barTime).add('1', 'M').startOf('month').toDate();\n  return new_date.getTime();\n  // return (barTime - (barTime % 31556926))+ 19800000\n}\n\nfunction getNextMinBarTime(barTime) {\n  // console.log(\"[bar] bartime :\",barTime)\n  const date = new Date(barTime);\n  const curTime = moment();\n  var duration = moment.duration(curTime.diff(date)).asMinutes();\n  // console.log(barTime,\"[bar] duration :\",duration,\" diff : \",curTime.diff(date),\" duration > 1 :\",duration > 1,\"  return : \",curTime.startOf('minute').toDate())\n  if (duration > 1) {\n    return curTime.startOf('minute').toDate().getTime(); //.getTime();\n  } else {\n    var new_date = moment(date).add('1', 'm').startOf('minute').toDate();\n    // console.log(\"lastDailyBar new_date : \",new_date.getTime())\n    return new_date.getTime();\n  }\n}","map":{"version":3,"names":["webSocketURL","logMessage","userid","usession","BrokerApiIns","placedOrder","moment","require","connectionStatus","socket","WebSocket","channelToSubscription","Map","singleQuoteMap","guidToSubscription","socketPreResponse","prelog","tokenid","userId","titleIndex","indexLP","changePer","onopen","connectionRequest","forEach","message","send","onmessage","msg","responseFeed","JSON","parse","data","t","s","ProcessPacketString","onclose","event","close","onerror","type","initCon","susertoken","actid","uid","ordcon","stringify","setTimeout","readyState","err","console","error","establishConnection","payload","closeConnection","clear","websocketSubscription","channel","tempChannel","substring","length","tempUniqueArray","split","uniqueChannel","uniqueArray","Set","element","json","k","websocketUnsubscriptionChain","getvalues","symbols","resolution","onRealtimeCallback","subscribeUID","onResetCacheNeededCallback","lastDailyBar","_subscribeltp","_subscribeQuotes","_subscribeBars","_subscribeSingleQuotes","symbol","channelString","exchange","token","_setChannelMap","subscribeOnStream","_subscribeDepth","unsubscribeFromStream","listenerGuid","get","subscriptionItem","handlers","filter","handler","id","undefined","delete","unsubscribeQuotesfromStream","set","existing","quote","Object","name","callback","index","findIndex","ob","push","has","dmsg","params","title","body","res","window","tvWidget","showNoticeDialog","status","_host","showNotification","norenordno","qty","side","tsym","currentAccountUpdate","depth","snapshot","asks","price","parseFloat","volume","parseInt","bids","tradeTime","preQuote","ch","chp","lp","open_price","high_price","low_price","prev_close_price","market_segment_id","description","short_name","oi","toi","poi","ask","ask_qty","bid","bid_qty","Number","callHandler","n","v","info","document","nextDailyBarTime","getNextMinBarTime","time","startOf","toDate","getTime","getNextDailyBarTime","getNextMonthBarTime","bar","open","high","low","Math","max","min","mapper","all","callbackResp","value","entries","keys","e","barTime","new_date","add","date","Date","curTime","duration","diff","asMinutes"],"sources":["D:/VUE_PROJECT_ALL/zebu_3.0/src/alldata/webSocketstream.js"],"sourcesContent":["/* eslint-disable no-extra-boolean-cast */\n// import Vue from \"vue\";\n// import Cryptojs from \"crypto-js\";\n// Vue.use(Cryptojs);\nimport { webSocketURL } from '../apiUrl.js'\n// import { webSocketURL,source } from '../apiUrl.js'\nimport { logMessage } from '../utils/helpers.js'\nimport { userid,usession } from '../alldata/apiConnectionPool'\nimport { BrokerApiIns, placedOrder } from \"../alldata/brokerapis\";\nconst moment = require('moment');\nvar connectionStatus = false\nconst socket = new WebSocket(webSocketURL);\n// console.log(BrokerApiIns,'BrokerApiIns',placedOrder)\nconst channelToSubscription = new Map();\nconst singleQuoteMap = new Map();\nconst guidToSubscription = new Map();\n\nvar socketPreResponse = new Map();\n\nconst prelog = []\n\n// const tokenid = `${userid}_${source}`\nconst tokenid = `${userid}`\nconst userId = userid\nexport var titleIndex={\n    indexLP:\"\",\n    changePer:\"\"\n}\n// export var ltp;\nsocket.onopen = function () {\n    connectionRequest(tokenid, userId)\n    prelog.forEach((message) => {\n        send(message)\n    });\n}\nsocket.onmessage = function (msg) {\n    var responseFeed = JSON.parse(msg.data);\n    // console.log(responseFeed)\n    if (!!responseFeed.t && responseFeed.t == 'ck' && responseFeed.s == 'OK') {\n        connectionStatus = true\n\n    } else if (!!responseFeed.t && responseFeed.t == 'ck' && responseFeed.s == 'NOT_OK') {\n        logMessage(\"!==========[Socket Session Invalid]============!\")\n    }\n    if (responseFeed.t) {\n        ProcessPacketString(responseFeed)\n    }\n\n}\nsocket.onclose = function (event) {\n    socket.close()\n    logMessage(`[socket] onclose:: ${event}`, 1);\n};\nsocket.onerror = function (event) {\n    logMessage(`[socket] Error: ${event} type ${event.type}`, 2);\n    socket.onclose()\n};\n\nasync function connectionRequest(tokenid, userId) {\n    var initCon = {\n        susertoken: usession,\n        t: \"c\",\n        actid: userId,\n        uid: userId,\n        // source: source\n    }\n    var ordcon = {\n        t: \"o\",\n        actid:userId,\n    }\n    send(JSON.stringify(initCon));\n    setTimeout(() => {\n        send(JSON.stringify(ordcon));\n      }, \"2000\");\n    \n}\n\nasync function send(msg) {\n    if (!!socket.readyState && socket.readyState == 1) {\n        try {\n            socket.send(msg);\n        } catch (err) {\n            console.error(\"socket send error : \",err);\n        }\n    } else if (!!socket.readyState && socket.readyState == 0) {\n        setTimeout(() => { socket.send(msg); }, 900);\n\n    } else {\n        logMessage(\"[socket send] socket connection is undefined\", 2)\n    }\n}\n\nasync function establishConnection(payload) {\n    if (connectionStatus == false) {\n        await connectionRequest(tokenid, userId);\n    }\n    await send(JSON.stringify(payload));\n}\n\n\nexport function closeConnection() {\n    socket.close()\n    channelToSubscription.clear();\n    singleQuoteMap.clear();\n    guidToSubscription.clear();\n}\n\n\nexport async function websocketSubscription(payload) {\n    if (connectionStatus) {\n        var channel = ''; //BSE|1#NSE|26017#NSE|26040#NSE|26009#NSE|26000#\n\n        channel += `${payload}`\n\n        if (channel != '' && !!channel) {\n            var tempChannel = channel.substring(0, channel.length - 1)\n            var tempUniqueArray = tempChannel.split('#')\n            var uniqueChannel = ''\n            const uniqueArray = new Set(tempUniqueArray);\n            uniqueArray.forEach(element => {\n                uniqueChannel += element + '#'\n            })\n            let json = {\n                k: uniqueChannel.substring(0, uniqueChannel.length - 1),\n                t: 'd'\n            };\n            await establishConnection(json);\n        }\n    }\n}\n\nexport async function websocketUnsubscriptionChain(payload) {\n    if (connectionStatus) {\n        var channel = '';\n\n        channel += `${payload}`\n\n        if (channel != '' && !!channel) {\n            var tempChannel = channel.substring(0, channel.length - 1)\n            var tempUniqueArray = tempChannel.split('#')\n            var uniqueChannel = ''\n            const uniqueArray = new Set(tempUniqueArray);\n            uniqueArray.forEach(element => {\n                uniqueChannel += element + '#'\n            })\n            let json = {\n                k: uniqueChannel.substring(0, uniqueChannel.length - 1),\n                t: 'ud'\n            };\n            await establishConnection(json);\n        }\n    }\n}\nexport function getvalues (\n    symbols,\n    resolution,\n    onRealtimeCallback,\n    subscribeUID,\n    onResetCacheNeededCallback,\n    lastDailyBar,\n    type) {\n\n    if (type == 'depth' ) {\n        // console.log(\"[depth] subscribeOnStream : \", symbols, type, subscribeUID)\n        _subscribeltp(symbols[0], onRealtimeCallback, subscribeUID)\n    }\n    if (type == 'quotes' || type == 'tt-quotes') {\n        _subscribeQuotes(symbols, onRealtimeCallback, subscribeUID, type)\n\n    } else if (type == 'bar') {\n      \n        _subscribeBars(symbols, onRealtimeCallback, subscribeUID, lastDailyBar, resolution)\n    } else if (type == 'single-quotes') {\n        _subscribeSingleQuotes(symbols, onRealtimeCallback, subscribeUID)\n    }\n    // else if (type == 'ltp') {\n    //     _subscribeltps(symbols, onRealtimeCallback, subscribeUID)\n    // }\n}\nfunction _subscribeltp(symbol, onRealtimeCallback, subscribeUID) {\n    var channelString = `${symbol.exchange}|${symbol.token}#`\n    // console.log(\"[depth] _subscribeDepth : \", channelString, symbol,)\n    _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, 'depth')\n    websocketSubscription(channelString)\n}\n\nexport function subscribeOnStream(\n    symbols,\n    resolution,\n    onRealtimeCallback,\n    subscribeUID,\n    onResetCacheNeededCallback,\n    lastDailyBar,\n    type) {\n\n    if (type == 'depth') {\n        // console.log(\"[depth] subscribeOnStream : \", symbols, type, subscribeUID)\n        _subscribeDepth(symbols[0], onRealtimeCallback, subscribeUID)\n    }\n    if (type == 'quotes' || type == 'tt-quotes') {\n        _subscribeQuotes(symbols, onRealtimeCallback, subscribeUID, type)\n\n    } else if (type == 'bar') {\n      \n        _subscribeBars(symbols, onRealtimeCallback, subscribeUID, lastDailyBar, resolution)\n    } else if (type == 'single-quotes') {\n        _subscribeSingleQuotes(symbols, onRealtimeCallback, subscribeUID)\n    }\n    // else if (type == 'ltp'){\n    //     _subscribeltps(symbols, onRealtimeCallback, subscribeUID)\n    // }\n}\n// function _subscribeltps(symbol, onRealtimeCallback, subscribeUID) {\n//     var channelString = `${symbol.exchange}|${symbol.token}#`\n//     console.log(\"[ltp] _subscribeDepth : \", channelString, symbol,)\n//     _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, 'ltp')\n//     websocketSubscription(channelString)\n// }\nexport function unsubscribeFromStream(listenerGuid) {\n    // console.log(\"[unsubscribe] listenerGuid : \",listenerGuid,guidToSubscription)\n    \n    let channelString = guidToSubscription.get(listenerGuid);\n    let subscriptionItem = channelToSubscription.get(channelString)\n    if (subscriptionItem) {\n        subscriptionItem.handlers = subscriptionItem.handlers.filter(function (handler) {\n            return handler.id != listenerGuid;\n        })\n        if (typeof subscriptionItem.handlers !== undefined && subscriptionItem.handlers.length == 0) {\n            websocketSubscription(channelString)\n            channelToSubscription.delete(channelString)\n        }\n    }\n}\n\nexport function unsubscribeQuotesfromStream(listenerGuid) {\n    // console.log(\"[unsubscribe] listenerGuid : \",listenerGuid,guidToSubscription)\n    \n    let channelString = guidToSubscription.get(listenerGuid);\n    let subscriptionItem = channelToSubscription.get(channelString)\n    if (subscriptionItem) {\n        subscriptionItem.handlers = subscriptionItem.handlers.filter(function (handler) {\n            return handler.id != listenerGuid;\n        })\n        if (typeof subscriptionItem.handlers !== undefined && subscriptionItem.handlers.length == 0) {\n            websocketSubscription(channelString)\n            channelToSubscription.delete(channelString)\n        }\n    }\n}\n\n\nfunction _subscribeQuotes(symbols, onRealtimeCallback, subscribeUID, type) {\n    symbols.forEach(function set(symbol) {\n        // console.log(symbol)\n\n        let channelString = `${symbol.exchange}|${symbol.token}#`\n        _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, type)\n        websocketSubscription(channelString)\n    })\n}\n\nfunction _subscribeDepth(symbol, onRealtimeCallback, subscribeUID) {\n    var channelString = `${symbol.exchange}|${symbol.token}#`\n    // console.log(\"[depth] _subscribeDepth : \", channelString, symbol,)\n    _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, 'depth')\n    websocketSubscription(channelString)\n}\n\nfunction _subscribeBars(symbols, onRealtimeCallback, subscribeUID, lastDailyBar, resolution) {\n    symbols.forEach(function set(symbol) {\n        let channelString = `${symbol.exchange}|${symbol.token}#`\n        _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, 'bar', resolution, lastDailyBar)\n        websocketSubscription(channelString)\n    })\n}\nfunction _subscribeSingleQuotes(symbols, onRealtimeCallback, subscribeUID) {\n    symbols.forEach(function set(symbol) {\n        let channelString = `${symbol.exchange}|${symbol.token}#`\n        let existing = singleQuoteMap.get(subscribeUID)\n        if (existing) {\n            existing[`${symbol.exchange}|${symbol.token}#`] = {\n                quote: {}\n            }\n        } else {\n            singleQuoteMap.set(subscribeUID, new Object())\n            singleQuoteMap.get(subscribeUID)[`${symbol.exchange}|${symbol.token}#`] = {\n                quote: {},\n                symbol: symbol.name\n            }\n        }\n        _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, 'single-quotes')\n        websocketSubscription(channelString)\n    })\n\n}\n\nfunction _setChannelMap(symbol, channelString, onRealtimeCallback, subscribeUID, type, resolution, lastDailyBar) {\n    let subscriptionItem = channelToSubscription.get(channelString);\n    let handler = {\n        id: subscribeUID,\n        callback: onRealtimeCallback,\n    };\n    if (subscriptionItem) {\n        var index = subscriptionItem.handlers.findIndex(ob => {\n            return ob.id == subscribeUID\n        })\n        if (index == -1) {\n            subscriptionItem.handlers.push({\n                handler: handler,\n                type: type,\n                resolution: resolution,\n                lastDailyBar: lastDailyBar,\n                symbol: symbol.name,\n                id: subscribeUID\n            });\n        } else {\n            subscriptionItem.handlers[index] = {\n                handler: handler,\n                type: type,\n                resolution: resolution,\n                lastDailyBar: lastDailyBar,\n                symbol: symbol.name,\n                id: subscribeUID\n            }\n        }\n    } else {\n        subscriptionItem = {\n            handlers: [{\n                handler: handler,\n                type: type,\n                resolution: resolution,\n                lastDailyBar: lastDailyBar,\n                symbol: symbol.name,\n                id: subscribeUID\n            }],\n        };\n        channelToSubscription.set(channelString, subscriptionItem);\n    }\n    guidToSubscription.set(subscribeUID, channelString)\n    // console.log(guidToSubscription,'jio')\n    if (!guidToSubscription.has(subscribeUID)) {\n        console.error(\"guid fail\")\n    }\n}\n\nexport function ProcessPacketString(responseFeed) {\n    try {\n      if (responseFeed.t == \"am\" && responseFeed.dmsg) {\n        // console.log(\"Alert Triggered\")\n        var params = {\n            title: 'Alert',\n            body: responseFeed.dmsg,\n            callback: (res) => {\n                if (res) {\n                    logMessage(res)\n                }\n            },\n        };\n        window.tvWidget.showNoticeDialog(params);\n      }\n      else if (responseFeed.t == \"om\" && responseFeed.status == \"COMPLETE\") {\n        // if(responseFeed.norenordno == placedOrder[responseFeed.norenordno])\n        // console.log(\"responseFeed.norenordno\", responseFeed.norenordno, placedOrder)\n        BrokerApiIns._host.showNotification(`Order ${placedOrder[responseFeed.norenordno].id} is ${responseFeed.status}`,`${placedOrder[responseFeed.norenordno].qty} ${placedOrder[responseFeed.norenordno].side == 1 ? \"BUY\" : \"SELL\"} for ${responseFeed.tsym} is ${responseFeed.status}`,placedOrder[responseFeed.norenordno].status == 5 || placedOrder[responseFeed.norenordno].status == 1 ? 0 : 1)\n        BrokerApiIns._host.currentAccountUpdate();\n      }\n        else if (responseFeed.t === \"dk\") {\n\n            var depth = {\n                snapshot: true,\n                asks: [\n                    { price: parseFloat(responseFeed[\"sp1\"]) ? parseFloat(responseFeed[\"sp1\"]) : parseFloat(responseFeed[\"lp\"]), volume: parseInt(responseFeed[\"sq1\"]) ? parseInt(responseFeed[\"sq1\"]) : 0 },\n                    { price: parseFloat(responseFeed[\"sp2\"]) ? parseFloat(responseFeed[\"sp2\"]) : parseFloat(responseFeed[\"lp\"]), volume: parseInt(responseFeed[\"sq2\"]) ? parseInt(responseFeed[\"sq2\"]) : 0 },\n                    { price: parseFloat(responseFeed[\"sp3\"]) ? parseFloat(responseFeed[\"sp3\"]) : parseFloat(responseFeed[\"lp\"]), volume: parseInt(responseFeed[\"sq3\"]) ? parseInt(responseFeed[\"sq3\"]) : 0 },\n                    { price: parseFloat(responseFeed[\"sp4\"]) ? parseFloat(responseFeed[\"sp4\"]) : parseFloat(responseFeed[\"lp\"]), volume: parseInt(responseFeed[\"sq4\"]) ? parseInt(responseFeed[\"sq4\"]) : 0 },\n                    { price: parseFloat(responseFeed[\"sp5\"]) ? parseFloat(responseFeed[\"sp5\"]) : parseFloat(responseFeed[\"lp\"]), volume: parseInt(responseFeed[\"sq5\"]) ? parseInt(responseFeed[\"sq5\"]) : 0 }\n                ],\n                bids: [\n                    { price: parseFloat(responseFeed[\"bp5\"]) ? parseFloat(responseFeed[\"bp5\"]) : parseFloat(responseFeed[\"lp\"]), volume: parseInt(responseFeed[\"bq5\"]) ? parseInt(responseFeed[\"bq5\"]) : 0 },\n                    { price: parseFloat(responseFeed[\"bp4\"]) ? parseFloat(responseFeed[\"bp4\"]) : parseFloat(responseFeed[\"lp\"]), volume: parseInt(responseFeed[\"bq4\"]) ? parseInt(responseFeed[\"bq4\"]) : 0 },\n                    { price: parseFloat(responseFeed[\"bp3\"]) ? parseFloat(responseFeed[\"bp3\"]) : parseFloat(responseFeed[\"lp\"]), volume: parseInt(responseFeed[\"bq3\"]) ? parseInt(responseFeed[\"bq3\"]) : 0 },\n                    { price: parseFloat(responseFeed[\"bp2\"]) ? parseFloat(responseFeed[\"bp2\"]) : parseFloat(responseFeed[\"lp\"]), volume: parseInt(responseFeed[\"bq2\"]) ? parseInt(responseFeed[\"bq2\"]) : 0 },\n                    { price: parseFloat(responseFeed[\"bp1\"]) ? parseFloat(responseFeed[\"bp1\"]) : parseFloat(responseFeed[\"lp\"]), volume: parseInt(responseFeed[\"bq1\"]) ? parseInt(responseFeed[\"bq1\"]) : 0 }\n                ]\n            }\n            var tradeTime\n            let preQuote = {\n                ch: parseFloat(responseFeed[\"lp\"]) ? (parseFloat(responseFeed[\"lp\"]) - parseFloat(responseFeed[\"c\"])) : 0,\n                chp: parseFloat(responseFeed[\"pc\"]) ? parseFloat(responseFeed[\"pc\"]) : 0,\n                lp: responseFeed[\"lp\"] ? parseFloat(responseFeed[\"lp\"]) : 0,\n                open_price: responseFeed[\"o\"] ? parseFloat(responseFeed[\"o\"]) : 0,\n                high_price: responseFeed[\"h\"] ? parseFloat(responseFeed[\"h\"]) : 0,\n                low_price: responseFeed[\"l\"] ? parseFloat(responseFeed[\"l\"]) : 0,\n                prev_close_price: responseFeed[\"c\"] ? parseFloat(responseFeed[\"c\"]) : 0,\n                volume: responseFeed[\"v\"] ? parseInt(responseFeed[\"v\"]) : 0,\n                token: responseFeed[\"tk\"],\n                exchange: responseFeed[\"e\"],\n                market_segment_id: responseFeed[\"e\"],\n                description: responseFeed[\"ts\"],\n                short_name: responseFeed[\"ts\"],\n                oi:  responseFeed[\"oi\"]?responseFeed[\"oi\"]:0,\n                toi: responseFeed[\"toi\"]?responseFeed[\"toi\"]:0,\n                poi: responseFeed[\"poi\"]?responseFeed[\"poi\"]:0,\n                ask: parseFloat(responseFeed[\"sp1\"]) ? parseFloat(responseFeed[\"sp1\"]) : parseFloat(responseFeed[\"lp\"]),\n                ask_qty: parseInt(responseFeed[\"sq1\"]) ? parseInt(responseFeed[\"sq1\"]) : 0,\n                bid: parseFloat(responseFeed[\"bp1\"]) ? parseFloat(responseFeed[\"bp1\"]) : parseFloat(responseFeed[\"lp\"]),\n                bid_qty: parseInt(responseFeed[\"bq1\"]) ? parseInt(responseFeed[\"bq1\"]) : 0,\n                depth: depth\n            }\n\n            tradeTime = Number(responseFeed[\"ft\"]) * 1000\n            if (!socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`)) {\n                socketPreResponse.set(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`, preQuote)\n            }\n\n        }\n        else if (responseFeed.t === \"df\") {\n\n            tradeTime = Number(responseFeed[\"ft\"]) * 1000\n            if (\"lp\" in responseFeed) {\n                socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp = responseFeed[\"lp\"];\n            }\n            if (\"o\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).open_price = parseFloat(responseFeed[\"o\"]);\n            if (\"h\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).high_price = parseFloat(responseFeed[\"h\"]);\n            if (\"l\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).low_price = parseFloat(responseFeed[\"l\"]);\n            if (\"c\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).prev_close_price = parseFloat(responseFeed[\"c\"]);\n            if (\"v\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).volume = parseInt(responseFeed[\"v\"]);\n            if (\"pc\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).chp = parseFloat(responseFeed[\"pc\"])\n            \n            if (\"oi\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).oi = parseFloat(responseFeed[\"oi\"])\n            if (\"toi\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).toi = parseFloat(responseFeed[\"toi\"])\n            if (\"poi\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).poi = parseFloat(responseFeed[\"poi\"])\n\n            socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).ch = (socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp) - (socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).prev_close_price)\n\n            if (\"sp1\" in responseFeed) {\n                socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[0].price = parseFloat(responseFeed[\"sp1\"]);\n                socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).ask = parseFloat(responseFeed[\"sp1\"]);\n            }\n            if (\"sq1\" in responseFeed) {\n                socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[0].volume = parseInt(responseFeed[\"sq1\"]);\n                socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).ask_qty = parseInt(responseFeed[\"sq1\"]);\n            }\n            if (\"sp2\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[1].price = parseFloat(responseFeed[\"sp2\"]);\n            if (\"sq2\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[1].volume = parseInt(responseFeed[\"sq2\"]);\n            if (\"sp3\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[2].price = parseFloat(responseFeed[\"sp3\"]);\n            if (\"sq3\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[2].volume = parseInt(responseFeed[\"sq3\"]);\n            if (\"sp4\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[3].price = parseFloat(responseFeed[\"sp4\"]);\n            if (\"sq4\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[3].volume = parseInt(responseFeed[\"sq4\"]);\n            if (\"sp5\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[4].price = parseFloat(responseFeed[\"sp5\"]);\n            if (\"sq5\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks[4].volume = parseInt(responseFeed[\"sq5\"]);\n\n            if (\"bp1\" in responseFeed) {\n                socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[4].price = parseFloat(responseFeed[\"bp1\"]);\n                socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).bid = parseFloat(responseFeed[\"bp1\"]);\n            }\n            if (\"bq1\" in responseFeed) {\n                socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[4].volume = parseInt(responseFeed[\"bq1\"]);\n                socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).bid_qty = parseInt(responseFeed[\"bq1\"]);\n            }\n            if (\"bp2\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[3].price = parseFloat(responseFeed[\"bp2\"]);\n            if (\"bq2\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[3].volume = parseInt(responseFeed[\"bq2\"]);\n            if (\"bp3\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[2].price = parseFloat(responseFeed[\"bp3\"]);\n            if (\"bq3\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[2].volume = parseInt(responseFeed[\"bq3\"]);\n            if (\"bp4\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[1].price = parseFloat(responseFeed[\"bp4\"]);\n            if (\"bq4\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[1].volume = parseInt(responseFeed[\"bq4\"]);\n            if (\"bp5\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[0].price = parseFloat(responseFeed[\"bp5\"]);\n            if (\"bq5\" in responseFeed) socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids[0].volume = parseInt(responseFeed[\"bq5\"]);\n\n        }\n        let channelString = `${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`\n        let subscriptionItem = channelToSubscription.get(channelString);\n            // console.log('subscriptionItem',subscriptionItem)\n        if (subscriptionItem === undefined) {\n            return;\n        }\n        if (subscriptionItem.handlers === undefined) {\n            return;\n        }\n        subscriptionItem.handlers.forEach(function callHandler(handler) {\n            if (handler.type == 'quotes') {\n                let quote = {\n                    s: 'ok',\n                    n: handler.symbol,\n                    v: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`)\n                }\n                try {\n                    handler.handler.callback([quote])\n                } catch (err) {\n                    console.info(err)\n                }\n\n            } else if (handler.type == 'tt-quotes') {\n                let quote = {\n                    s: 'success',\n                    n: handler.symbol,\n                    v: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`)\n                }\n                try {\n                    handler.handler.callback(quote)\n                } catch (err) {\n                    console.info(err)\n                }\n            } else if (handler.type == 'bar') {\n                // console.log(\"handler.symbol : \",handler.symbol)\n                document.title=`${socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp}@${handler.symbol.split(\":\")[1]} ${socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).chp<0?'▼':'▲'} (${socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).chp}%)`\n                const lastDailyBar = handler.lastDailyBar;\n                const resolution = handler.resolution;\n                var nextDailyBarTime\n                if (resolution == '1' || resolution == 1) {\n                    nextDailyBarTime = getNextMinBarTime(lastDailyBar != null ? lastDailyBar.time : null);\n                } else if (resolution == '1D') {\n                    tradeTime = moment(tradeTime).startOf('day').toDate().getTime() + 19800000  //that day start \n                    tradeTime = moment(tradeTime).startOf('day').toDate().getTime() + 19800000  //that day start \n                    nextDailyBarTime = getNextDailyBarTime(lastDailyBar != null ? lastDailyBar.time : null);\n                } else if (resolution == '1M') {\n                    tradeTime = moment(tradeTime).startOf('month').toDate().getTime() + 19800000\n                    nextDailyBarTime = getNextMonthBarTime(lastDailyBar != null ? lastDailyBar.time : null);\n                }\n                let bar;\n                // console.log(\"[bar] nextDailyBarTime : \",nextDailyBarTime,typeof nextDailyBarTime,tradeTime,typeof tradeTime,\"\\ncondition: \",tradeTime >= nextDailyBarTime)\n                if (tradeTime >= nextDailyBarTime) {\n                    // console.log(\"lastDailyBar  tradeTime>nextDailyBarTime TRUE : \",resolution,tradeTime,nextDailyBarTime)\n                    if (resolution == '1D') {\n                        // console.log(\"lastDailyBar  tradeTime>nextDailyBarTime TRUE IF 1D: \",tradeTime,nextDailyBarTime)\n                        bar = {\n                            time: nextDailyBarTime,\n                            open: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).open_price,\n                            high: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).high_price,\n                            low: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).low_price,\n                            close: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n                            volume: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).volume\n                        };\n                    } else {\n                        // console.log(\"lastDailyBar  tradeTime>nextDailyBarTime TRUE ELSE 1D: \",tradeTime,nextDailyBarTime)\n                        bar = {\n                            time: nextDailyBarTime,\n                            open: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n                            high: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n                            low: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n                            close: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n                        };\n                    }\n                } else {\n                    if (resolution == '1D') {\n                        // console.log(\"lastDailyBar  tradeTime>nextDailyBarTime FALSE IF 1D: \",tradeTime,nextDailyBarTime)\n                        \n                        bar = {\n                            ...lastDailyBar,\n                            high: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).high_price,\n                            low: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).low_price,\n                            close: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n                            volume: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).volume\n                        };\n                    } else {\n                        // console.log(\"lastDailyBar  tradeTime>nextDailyBarTime FALSE ELSE 1D: \",tradeTime,nextDailyBarTime)\n                        bar = {\n                            ...lastDailyBar,\n                            high: Math.max((lastDailyBar != null ? lastDailyBar.high : 0), socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp),\n                            low: Math.min(lastDailyBar != null ? lastDailyBar.low : 0, socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp),\n                            close: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).lp,\n                        };\n                    }\n                }\n                handler.handler.callback(bar)\n               \n                // console.log(bar,'ltp')\n                handler.lastDailyBar = bar;\n                \n                //    localStorage.setItem('ltp',bar['high'])    \n               \n                \n\n            } else if (handler.type == 'single-quotes') {\n                let quote = {\n                    s: 'success',\n                    n: handler.symbol,\n                    v: socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`)\n                }\n                let mapper = singleQuoteMap.get(handler.id)\n                if (mapper) {\n                    let all = true\n                    let callbackResp = []\n                    mapper[`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`].quote = quote\n                    for (const [, value] of Object.entries(mapper)) {\n                        if (Object.keys(value.quote).length === 0) {\n                            all = false\n                        } else {\n                            callbackResp.push({\n                                \"s\": \"ok\",\n                                \"n\": value.quote.n,\n                                \"v\": {\n                                    \"ch\": value.quote.v.ch,\n                                    \"chp\": value.quote.v.chp,\n                                    \"short_name\": value.quote.n,\n                                    \"exchange\": value.quote.v.exchange,\n                                    \"description\": value.quote.n,\n                                    \"lp\": value.quote.v.lp,\n                                    \"ask\": value.quote.v.ask || 0,\n                                    \"bid\": value.quote.v.bid || 0,\n                                    \"open_price\": value.quote.v.open_price,\n                                    \"high_price\": value.quote.v.high_price,\n                                    \"low_price\": value.quote.v.low_price,\n                                    \"prev_close_price\": value.quote.v.prev_close_price,\n                                    \"volume\": value.quote.v.volume,\n\n                                }\n                            })\n                        }\n                    }\n                    if (all) {\n                        handler.handler.callback(callbackResp)\n                        singleQuoteMap.delete(handler.handler.id)\n                        unsubscribeFromStream(handler.handler.id)\n                    }\n                }\n            } else if (handler.type == 'depth') {\n                // console.log(\"[depth] depth List: \", socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`))\n                // socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks = socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.asks.sort((a, b) => (a.price > b.price) ? 1 : ((b.price > a.price) ? -1 : 0))\n                // socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids = socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth.bids.sort((a, b) => (a.price > b.price) ? 1 : ((b.price > a.price) ? -1 : 0))\n                handler.handler.callback(socketPreResponse.get(`${responseFeed[\"e\"]}|${responseFeed[\"tk\"]}#`).depth)\n            }\n            \n           \n        });\n\n    } catch (e) {\n        // console.log(\"ERROR : \", e)\n    }\n    // console.log(ltp,'ltp')\n    // return ltp\n}\n\n\nfunction getNextDailyBarTime(barTime) {\n    var new_date = moment(barTime).add('1', 'd').startOf('day').toDate()\n    return new_date.getTime() + 19800000;\n    // return (barTime - (barTime % 86400))+ 19800000\n}\n\nfunction getNextMonthBarTime(barTime) {\n    var new_date = moment(barTime).add('1', 'M').startOf('month').toDate()\n    return new_date.getTime();\n    // return (barTime - (barTime % 31556926))+ 19800000\n}\n\nfunction getNextMinBarTime(barTime) {\n    // console.log(\"[bar] bartime :\",barTime)\n    const date = new Date(barTime);\n    const curTime = moment();\n    var duration = moment.duration(curTime.diff(date)).asMinutes();\n    // console.log(barTime,\"[bar] duration :\",duration,\" diff : \",curTime.diff(date),\" duration > 1 :\",duration > 1,\"  return : \",curTime.startOf('minute').toDate())\n    if (duration > 1) {\n        return curTime.startOf('minute').toDate().getTime() //.getTime();\n    } else {\n        var new_date = moment(date).add('1', 'm').startOf('minute').toDate()\n        // console.log(\"lastDailyBar new_date : \",new_date.getTime())\n        return new_date.getTime();\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}